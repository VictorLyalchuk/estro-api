// <auto-generated />
using System;
using System.Collections.Generic;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20240528184828_start")]
    partial class start
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Category.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("URLName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open shoes",
                            SubCategoryId = 1,
                            URLName = "open_shoes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pumps and loafers",
                            SubCategoryId = 1,
                            URLName = "pumps_and_loafers"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Heeled shoes",
                            SubCategoryId = 1,
                            URLName = "heeled_shoes"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Women's athletic sneakers",
                            SubCategoryId = 1,
                            URLName = "women's_athletic_sneakers"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Women's sneakers",
                            SubCategoryId = 1,
                            URLName = "women_sneakers"
                        },
                        new
                        {
                            Id = 6,
                            Name = "High boots and Chelsea",
                            SubCategoryId = 1,
                            URLName = "high_boots_&_chelsea"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Boots on heels",
                            SubCategoryId = 1,
                            URLName = "boots_on_heels"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Boots and high boots",
                            SubCategoryId = 1,
                            URLName = "boots_and_high_boots"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Cossacks boots",
                            SubCategoryId = 1,
                            URLName = "cossacks_boots"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Winter footwear",
                            SubCategoryId = 1,
                            URLName = "winter_footwear"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Perforated shoes",
                            SubCategoryId = 1,
                            URLName = "perforated_shoes"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Men's boots",
                            SubCategoryId = 2,
                            URLName = "men_boots"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Men's athletic sneakers",
                            SubCategoryId = 2,
                            URLName = "man_athletic_sneakers"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Men's sneakers",
                            SubCategoryId = 2,
                            URLName = "man_sneakers"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Men's pumps",
                            SubCategoryId = 2,
                            URLName = "man_pumps"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Men's moccasins",
                            SubCategoryId = 2,
                            URLName = "man_moccasins"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Men's summer shoes",
                            SubCategoryId = 2,
                            URLName = "man_summer_shoes"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Women's outerwear",
                            SubCategoryId = 3,
                            URLName = "woman_outerwear"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Women's sweaters and suits",
                            SubCategoryId = 3,
                            URLName = "woman_sweaters_and_suits"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Women's t-shirts and sweatshirts",
                            SubCategoryId = 3,
                            URLName = "woman_t_shirts_and_sweatshirts"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Women's shawl",
                            SubCategoryId = 3,
                            URLName = "woman_shawl"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Women's scarves and hats",
                            SubCategoryId = 3,
                            URLName = "woman_scarves_and_hats"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Women's gloves",
                            SubCategoryId = 3,
                            URLName = "woman_gloves"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Women's socks and tights",
                            SubCategoryId = 3,
                            URLName = "woman_socks_and_tights"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Men's outerwear",
                            SubCategoryId = 4,
                            URLName = "man_outerwear"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Men's sweaters and suits",
                            SubCategoryId = 4,
                            URLName = "man_sweaters_and_suits"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Men's t-shirts and sweatshirts",
                            SubCategoryId = 4,
                            URLName = "man_t_shirts_and_sweatshirts"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Men's scarves and hats",
                            SubCategoryId = 4,
                            URLName = "man_scarves_and_hats"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Men's gloves",
                            SubCategoryId = 4,
                            URLName = "man_gloves"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Men's socks",
                            SubCategoryId = 4,
                            URLName = "man_socks"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Women's glasses",
                            SubCategoryId = 5,
                            URLName = "woman_glasses"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Women's home shoes",
                            SubCategoryId = 5,
                            URLName = "woman_home_shoes"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Women's bags",
                            SubCategoryId = 5,
                            URLName = "woman_bags"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Women's backpacks",
                            SubCategoryId = 5,
                            URLName = "woman_backpacks"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Women's care products",
                            SubCategoryId = 5,
                            URLName = "woman_care_products"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Men's glasses",
                            SubCategoryId = 6,
                            URLName = "man_glasses"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Men's home shoes",
                            SubCategoryId = 6,
                            URLName = "man_home_shoes"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Men's bags",
                            SubCategoryId = 6,
                            URLName = "man_bags"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Men's backpacks",
                            SubCategoryId = 6,
                            URLName = "man_backpacks"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Men's care products",
                            SubCategoryId = 6,
                            URLName = "man_care_products"
                        });
                });

            modelBuilder.Entity("Core.Entities.Category.MainCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("URLName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MainCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Woman",
                            URLName = "woman"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Man",
                            URLName = "man"
                        });
                });

            modelBuilder.Entity("Core.Entities.Category.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<int?>("MainCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("URLName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MainCategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MainCategoryId = 1,
                            Name = "Woman Shoes",
                            URLName = "woman_shoes"
                        },
                        new
                        {
                            Id = 2,
                            MainCategoryId = 2,
                            Name = "Man Shoes",
                            URLName = "man_shoes"
                        },
                        new
                        {
                            Id = 3,
                            MainCategoryId = 1,
                            Name = "Woman Clothing",
                            URLName = "woman_clothing"
                        },
                        new
                        {
                            Id = 4,
                            MainCategoryId = 2,
                            Name = "Man Clothing",
                            URLName = "man_clothing"
                        },
                        new
                        {
                            Id = 5,
                            MainCategoryId = 1,
                            Name = "Woman Accessories",
                            URLName = "woman_accessories"
                        },
                        new
                        {
                            Id = 6,
                            MainCategoryId = 2,
                            Name = "Man Accessories",
                            URLName = "man_accessories"
                        });
                });

            modelBuilder.Entity("Core.Entities.Information.Bag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Bag");
                });

            modelBuilder.Entity("Core.Entities.Information.BagItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BagId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BagId");

                    b.HasIndex("ProductId");

                    b.ToTable("BagItems");
                });

            modelBuilder.Entity("Core.Entities.Information.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailUser")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Payment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Core.Entities.Information.OrderItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Core.Entities.Product.ImageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagePath = "Product1_1.webp",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImagePath = "Product1_2.webp",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            ImagePath = "Product1_3.webp",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 4,
                            ImagePath = "Product1_4.webp",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 5,
                            ImagePath = "Product1_5.webp",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 6,
                            ImagePath = "Product1_6.webp",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 7,
                            ImagePath = "Product2_1.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 8,
                            ImagePath = "Product2_2.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 9,
                            ImagePath = "Product2_3.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 10,
                            ImagePath = "Product2_4.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 11,
                            ImagePath = "Product2_5.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 12,
                            ImagePath = "Product2_6.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 13,
                            ImagePath = "Product2_7.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 14,
                            ImagePath = "Product2_8.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 15,
                            ImagePath = "Product2_9.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 16,
                            ImagePath = "Product3_1.webp",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 17,
                            ImagePath = "Product3_2.webp",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 18,
                            ImagePath = "Product3_3.webp",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 19,
                            ImagePath = "Product3_4.webp",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 20,
                            ImagePath = "Product3_5.webp",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 21,
                            ImagePath = "Product4_1.webp",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 22,
                            ImagePath = "Product4_2.webp",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 23,
                            ImagePath = "Product4_3.webp",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 24,
                            ImagePath = "Product4_4.webp",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 25,
                            ImagePath = "Product4_5.webp",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 26,
                            ImagePath = "Product4_6.webp",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 27,
                            ImagePath = "Product5_1.webp",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 28,
                            ImagePath = "Product5_2.webp",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 29,
                            ImagePath = "Product5_3.webp",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 30,
                            ImagePath = "Product5_4.webp",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 31,
                            ImagePath = "Product5_5.webp",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 32,
                            ImagePath = "Product5_6.webp",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 33,
                            ImagePath = "Product6_1.webp",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 34,
                            ImagePath = "Product6_2.webp",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 35,
                            ImagePath = "Product6_3.webp",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 36,
                            ImagePath = "Product6_4.webp",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 37,
                            ImagePath = "Product6_5.webp",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 38,
                            ImagePath = "Product6_6.webp",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 39,
                            ImagePath = "Product7_1.webp",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 40,
                            ImagePath = "Product7_2.webp",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 41,
                            ImagePath = "Product7_3.webp",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 42,
                            ImagePath = "Product7_4.webp",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 43,
                            ImagePath = "Product7_5.webp",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 44,
                            ImagePath = "Product8_1.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 45,
                            ImagePath = "Product8_2.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 46,
                            ImagePath = "Product8_3.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 47,
                            ImagePath = "Product8_4.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 48,
                            ImagePath = "Product8_5.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 49,
                            ImagePath = "Product8_6.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 50,
                            ImagePath = "Product8_7.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 51,
                            ImagePath = "Product9_1.webp",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 52,
                            ImagePath = "Product9_2.webp",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 53,
                            ImagePath = "Product9_3.webp",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 54,
                            ImagePath = "Product9_4.webp",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 55,
                            ImagePath = "Product9_5.webp",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 56,
                            ImagePath = "Product9_6.webp",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 57,
                            ImagePath = "Product10_1.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 58,
                            ImagePath = "Product10_2.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 59,
                            ImagePath = "Product10_3.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 60,
                            ImagePath = "Product10_4.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 61,
                            ImagePath = "Product10_5.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 62,
                            ImagePath = "Product10_6.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 63,
                            ImagePath = "Product10_7.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 64,
                            ImagePath = "Product10_8.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 65,
                            ImagePath = "Product11_1.webp",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 66,
                            ImagePath = "Product11_2.webp",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 67,
                            ImagePath = "Product11_3.webp",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 68,
                            ImagePath = "Product11_4.webp",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 69,
                            ImagePath = "Product11_5.webp",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 70,
                            ImagePath = "Product11_6.webp",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 71,
                            ImagePath = "Product12_1.webp",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 72,
                            ImagePath = "Product12_2.webp",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 73,
                            ImagePath = "Product12_3.webp",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 74,
                            ImagePath = "Product12_4.webp",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 75,
                            ImagePath = "Product12_5.webp",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 76,
                            ImagePath = "Product12_6.webp",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 77,
                            ImagePath = "Product13_1.webp",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 78,
                            ImagePath = "Product13_2.webp",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 79,
                            ImagePath = "Product13_3.webp",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 80,
                            ImagePath = "Product13_4.webp",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 81,
                            ImagePath = "Product13_5.webp",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 82,
                            ImagePath = "Product13_6.webp",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 83,
                            ImagePath = "Product14_1.webp",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 84,
                            ImagePath = "Product14_2.webp",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 85,
                            ImagePath = "Product14_3.webp",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 86,
                            ImagePath = "Product14_4.webp",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 87,
                            ImagePath = "Product14_5.webp",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 88,
                            ImagePath = "Product14_6.webp",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 89,
                            ImagePath = "Product15_1.webp",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 90,
                            ImagePath = "Product15_2.webp",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 91,
                            ImagePath = "Product15_3.webp",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 92,
                            ImagePath = "Product15_4.webp",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 93,
                            ImagePath = "Product15_5.webp",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 94,
                            ImagePath = "Product15_6.webp",
                            ProductId = 15
                        });
                });

            modelBuilder.Entity("Core.Entities.Product.ImageForHome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ImageForHome");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagePath = "800_home_page_1.webp"
                        },
                        new
                        {
                            Id = 2,
                            ImagePath = "800_home_page_2.webp"
                        },
                        new
                        {
                            Id = 3,
                            ImagePath = "800_home_page_3.webp"
                        },
                        new
                        {
                            Id = 4,
                            ImagePath = "800_home_page_4.webp"
                        },
                        new
                        {
                            Id = 5,
                            ImagePath = "800_home_page_5.webp"
                        },
                        new
                        {
                            Id = 6,
                            ImagePath = "800_home_page_6.webp"
                        },
                        new
                        {
                            Id = 7,
                            ImagePath = "800_home_page_7.webp"
                        },
                        new
                        {
                            Id = 8,
                            ImagePath = "800_home_page_8.webp"
                        },
                        new
                        {
                            Id = 9,
                            ImagePath = "800_home_page_9.webp"
                        },
                        new
                        {
                            Id = 10,
                            ImagePath = "800_home_page_10.webp"
                        },
                        new
                        {
                            Id = 11,
                            ImagePath = "800_home_page_11.webp"
                        },
                        new
                        {
                            Id = 12,
                            ImagePath = "800_home_page_12.webp"
                        },
                        new
                        {
                            Id = 13,
                            ImagePath = "800_home_page_13.webp"
                        },
                        new
                        {
                            Id = 14,
                            ImagePath = "800_home_page_14.webp"
                        },
                        new
                        {
                            Id = 15,
                            ImagePath = "800_home_page_15.webp"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product.Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Info");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Color"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Material"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Size"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Purpose"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product.Options", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("InfoId")
                        .HasColumnType("integer");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InfoId");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InfoId = 1,
                            Label = "Black",
                            Value = "black"
                        },
                        new
                        {
                            Id = 2,
                            InfoId = 1,
                            Label = "Brown",
                            Value = "brown"
                        },
                        new
                        {
                            Id = 3,
                            InfoId = 1,
                            Label = "Gray",
                            Value = "gray"
                        },
                        new
                        {
                            Id = 4,
                            InfoId = 1,
                            Label = "Light Gray",
                            Value = "lightgray"
                        },
                        new
                        {
                            Id = 5,
                            InfoId = 1,
                            Label = "White",
                            Value = "white"
                        },
                        new
                        {
                            Id = 6,
                            InfoId = 1,
                            Label = "Milk",
                            Value = "milk"
                        },
                        new
                        {
                            Id = 7,
                            InfoId = 1,
                            Label = "Navi",
                            Value = "navi"
                        },
                        new
                        {
                            Id = 8,
                            InfoId = 1,
                            Label = "Blue",
                            Value = "blue"
                        },
                        new
                        {
                            Id = 9,
                            InfoId = 2,
                            Label = "Leather",
                            Value = "leather"
                        },
                        new
                        {
                            Id = 10,
                            InfoId = 2,
                            Label = "Suede",
                            Value = "suede"
                        },
                        new
                        {
                            Id = 11,
                            InfoId = 2,
                            Label = "Nubuck",
                            Value = "nubuck"
                        },
                        new
                        {
                            Id = 12,
                            InfoId = 2,
                            Label = "Textile",
                            Value = "textile"
                        },
                        new
                        {
                            Id = 13,
                            InfoId = 2,
                            Label = "Synthetic",
                            Value = "synthetic"
                        },
                        new
                        {
                            Id = 14,
                            InfoId = 2,
                            Label = "Eco Leather",
                            Value = "ecoleather"
                        },
                        new
                        {
                            Id = 15,
                            InfoId = 3,
                            Label = "35",
                            Value = "35"
                        },
                        new
                        {
                            Id = 16,
                            InfoId = 3,
                            Label = "36",
                            Value = "36"
                        },
                        new
                        {
                            Id = 17,
                            InfoId = 3,
                            Label = "37",
                            Value = "37"
                        },
                        new
                        {
                            Id = 18,
                            InfoId = 3,
                            Label = "38",
                            Value = "38"
                        },
                        new
                        {
                            Id = 19,
                            InfoId = 3,
                            Label = "39",
                            Value = "39"
                        },
                        new
                        {
                            Id = 20,
                            InfoId = 3,
                            Label = "40",
                            Value = "40"
                        },
                        new
                        {
                            Id = 21,
                            InfoId = 3,
                            Label = "41",
                            Value = "41"
                        },
                        new
                        {
                            Id = 25,
                            InfoId = 3,
                            Label = "42",
                            Value = "42"
                        },
                        new
                        {
                            Id = 26,
                            InfoId = 3,
                            Label = "43",
                            Value = "43"
                        },
                        new
                        {
                            Id = 27,
                            InfoId = 3,
                            Label = "44",
                            Value = "44"
                        },
                        new
                        {
                            Id = 28,
                            InfoId = 3,
                            Label = "45",
                            Value = "45"
                        },
                        new
                        {
                            Id = 29,
                            InfoId = 3,
                            Label = "46",
                            Value = "46"
                        },
                        new
                        {
                            Id = 30,
                            InfoId = 4,
                            Label = "Winter",
                            Value = "winter"
                        },
                        new
                        {
                            Id = 31,
                            InfoId = 4,
                            Label = "Spring",
                            Value = "spring"
                        },
                        new
                        {
                            Id = 32,
                            InfoId = 4,
                            Label = "Summer",
                            Value = "summer"
                        },
                        new
                        {
                            Id = 33,
                            InfoId = 4,
                            Label = "Autumn",
                            Value = "autumn"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("Highlights")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "ER00113828",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "These stylish black leather boots-stockings are a perfect blend of fashion and comfort. Crafted with high-quality leather, they provide a sleek and sophisticated look. Ideal for various occasions, these boots-stockings are a must-have in your wardrobe.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots-stockings are black leather",
                            Price = 7399m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 2,
                            Article = "ER00112019",
                            CategoryId = 8,
                            Color = "Brown",
                            Description = "Step into the season with elegance in these Autumn brown leather stretch boots. Meticulously crafted from premium leather, these boots offer both style and comfort. The stretch feature ensures a snug fit, while the rich brown color adds a touch of warmth to your autumn wardrobe. Perfect for any occasion, these boots are a fashion statement that complements your unique style. Embrace the essence of autumn with each step.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Autumn brown leather stretch boots",
                            Price = 8899m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 3,
                            Article = "ER00112018",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Autumn leather stretch boots",
                            Price = 8899m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 4,
                            Article = "ER00112022",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots autumn leather black",
                            Price = 9899m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 5,
                            Article = "ER00112011",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Black autumn leather stretch boots",
                            Price = 9899m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 6,
                            Article = "ER00113851",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Black demi-season boots",
                            Price = 8799m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 7,
                            Article = "ER00112023",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots-stockings leather black",
                            Price = 9989m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 8,
                            Article = "ER00114318",
                            CategoryId = 8,
                            Color = "Burgundy",
                            Description = "Estro ER00112018 Burgundy Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots-pipes with wide freebies are burgundy",
                            Price = 9989m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 9,
                            Article = "ER00112298",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Black leather Cossack boots",
                            Price = 8799m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 10,
                            Article = "ER00112123",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots-stockings on a stiletto are black",
                            Price = 8699m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 11,
                            Article = "ER00112122",
                            CategoryId = 8,
                            Color = "Milk",
                            Description = "Estro ER00112018 Milk Leather Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 Milk leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Milk stiletto stocking boots",
                            Price = 8699m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 12,
                            Article = "ER00114239",
                            CategoryId = 8,
                            Color = "Brown",
                            Description = "Estro ER00112018 Milk Leather Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 Milk leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots-stockings on a stiletto are brown",
                            Price = 8399m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 13,
                            Article = "ER00114240",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Milk Leather Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 Milk leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots-stockings on a stiletto are black",
                            Price = 8399m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 14,
                            Article = "ER00113949",
                            CategoryId = 7,
                            Color = "Black",
                            Description = "Estro ER00112018 Milk Leather Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 Milk leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Ankle boots are black",
                            Price = 2890m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 15,
                            Article = "ER00111942",
                            CategoryId = 12,
                            Color = "Black",
                            Description = "Estro ER00112018 Milk Leather Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 Milk leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Winter boots",
                            Price = 2290m,
                            Purpose = "Winter"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product.StorageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.Property<bool>("inStock")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Storage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            ProductQuantity = 8,
                            Size = 36,
                            inStock = true
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 1,
                            ProductQuantity = 20,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 1,
                            ProductQuantity = 40,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 1,
                            ProductQuantity = 10,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 1,
                            ProductQuantity = 10,
                            Size = 40,
                            inStock = true
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 1,
                            ProductQuantity = 10,
                            Size = 41,
                            inStock = true
                        },
                        new
                        {
                            Id = 7,
                            ProductId = 2,
                            ProductQuantity = 12,
                            Size = 36,
                            inStock = true
                        },
                        new
                        {
                            Id = 8,
                            ProductId = 2,
                            ProductQuantity = 10,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 9,
                            ProductId = 2,
                            ProductQuantity = 40,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 10,
                            ProductId = 2,
                            ProductQuantity = 30,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 11,
                            ProductId = 2,
                            ProductQuantity = 40,
                            Size = 40,
                            inStock = true
                        },
                        new
                        {
                            Id = 12,
                            ProductId = 2,
                            ProductQuantity = 20,
                            Size = 41,
                            inStock = true
                        },
                        new
                        {
                            Id = 13,
                            ProductId = 3,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 14,
                            ProductId = 3,
                            ProductQuantity = 1,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 15,
                            ProductId = 3,
                            ProductQuantity = 1,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 16,
                            ProductId = 3,
                            ProductQuantity = 1,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 17,
                            ProductId = 3,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 18,
                            ProductId = 3,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 19,
                            ProductId = 4,
                            ProductQuantity = 9,
                            Size = 36,
                            inStock = true
                        },
                        new
                        {
                            Id = 20,
                            ProductId = 4,
                            ProductQuantity = 8,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 21,
                            ProductId = 4,
                            ProductQuantity = 8,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 22,
                            ProductId = 4,
                            ProductQuantity = 0,
                            Size = 39,
                            inStock = false
                        },
                        new
                        {
                            Id = 23,
                            ProductId = 4,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 24,
                            ProductId = 4,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 25,
                            ProductId = 5,
                            ProductQuantity = 7,
                            Size = 36,
                            inStock = true
                        },
                        new
                        {
                            Id = 26,
                            ProductId = 5,
                            ProductQuantity = 0,
                            Size = 37,
                            inStock = false
                        },
                        new
                        {
                            Id = 27,
                            ProductId = 5,
                            ProductQuantity = 8,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 28,
                            ProductId = 5,
                            ProductQuantity = 9,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 29,
                            ProductId = 5,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 30,
                            ProductId = 5,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 31,
                            ProductId = 6,
                            ProductQuantity = 9,
                            Size = 36,
                            inStock = true
                        },
                        new
                        {
                            Id = 32,
                            ProductId = 6,
                            ProductQuantity = 8,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 33,
                            ProductId = 6,
                            ProductQuantity = 0,
                            Size = 38,
                            inStock = false
                        },
                        new
                        {
                            Id = 34,
                            ProductId = 6,
                            ProductQuantity = 0,
                            Size = 39,
                            inStock = false
                        },
                        new
                        {
                            Id = 35,
                            ProductId = 6,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 36,
                            ProductId = 6,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 37,
                            ProductId = 7,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 38,
                            ProductId = 7,
                            ProductQuantity = 8,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 39,
                            ProductId = 7,
                            ProductQuantity = 0,
                            Size = 38,
                            inStock = false
                        },
                        new
                        {
                            Id = 40,
                            ProductId = 7,
                            ProductQuantity = 9,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 41,
                            ProductId = 7,
                            ProductQuantity = 8,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 42,
                            ProductId = 7,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 43,
                            ProductId = 8,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 44,
                            ProductId = 8,
                            ProductQuantity = 4,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 45,
                            ProductId = 8,
                            ProductQuantity = 0,
                            Size = 38,
                            inStock = false
                        },
                        new
                        {
                            Id = 46,
                            ProductId = 8,
                            ProductQuantity = 8,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 47,
                            ProductId = 8,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 48,
                            ProductId = 8,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 49,
                            ProductId = 9,
                            ProductQuantity = 5,
                            Size = 36,
                            inStock = true
                        },
                        new
                        {
                            Id = 50,
                            ProductId = 9,
                            ProductQuantity = 0,
                            Size = 37,
                            inStock = false
                        },
                        new
                        {
                            Id = 51,
                            ProductId = 9,
                            ProductQuantity = 0,
                            Size = 38,
                            inStock = false
                        },
                        new
                        {
                            Id = 52,
                            ProductId = 9,
                            ProductQuantity = 0,
                            Size = 39,
                            inStock = false
                        },
                        new
                        {
                            Id = 53,
                            ProductId = 9,
                            ProductQuantity = 7,
                            Size = 40,
                            inStock = true
                        },
                        new
                        {
                            Id = 54,
                            ProductId = 9,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 55,
                            ProductId = 10,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 56,
                            ProductId = 10,
                            ProductQuantity = 0,
                            Size = 37,
                            inStock = false
                        },
                        new
                        {
                            Id = 57,
                            ProductId = 10,
                            ProductQuantity = 10,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 58,
                            ProductId = 10,
                            ProductQuantity = 10,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 59,
                            ProductId = 10,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 60,
                            ProductId = 10,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 61,
                            ProductId = 11,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 62,
                            ProductId = 11,
                            ProductQuantity = 10,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 63,
                            ProductId = 11,
                            ProductQuantity = 10,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 64,
                            ProductId = 11,
                            ProductQuantity = 10,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 65,
                            ProductId = 11,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 66,
                            ProductId = 11,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 67,
                            ProductId = 12,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 68,
                            ProductId = 12,
                            ProductQuantity = 10,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 69,
                            ProductId = 12,
                            ProductQuantity = 50,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 70,
                            ProductId = 12,
                            ProductQuantity = 10,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 71,
                            ProductId = 12,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 72,
                            ProductId = 12,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 73,
                            ProductId = 13,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 74,
                            ProductId = 13,
                            ProductQuantity = 0,
                            Size = 37,
                            inStock = false
                        },
                        new
                        {
                            Id = 75,
                            ProductId = 13,
                            ProductQuantity = 10,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 76,
                            ProductId = 13,
                            ProductQuantity = 0,
                            Size = 39,
                            inStock = false
                        },
                        new
                        {
                            Id = 77,
                            ProductId = 13,
                            ProductQuantity = 10,
                            Size = 40,
                            inStock = true
                        },
                        new
                        {
                            Id = 78,
                            ProductId = 13,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 79,
                            ProductId = 14,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 80,
                            ProductId = 14,
                            ProductQuantity = 15,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 81,
                            ProductId = 14,
                            ProductQuantity = 10,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 82,
                            ProductId = 14,
                            ProductQuantity = 10,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 83,
                            ProductId = 14,
                            ProductQuantity = 10,
                            Size = 40,
                            inStock = true
                        },
                        new
                        {
                            Id = 84,
                            ProductId = 14,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 85,
                            ProductId = 15,
                            ProductQuantity = 0,
                            Size = 39,
                            inStock = false
                        },
                        new
                        {
                            Id = 86,
                            ProductId = 15,
                            ProductQuantity = 15,
                            Size = 40,
                            inStock = true
                        },
                        new
                        {
                            Id = 87,
                            ProductId = 15,
                            ProductQuantity = 10,
                            Size = 41,
                            inStock = true
                        },
                        new
                        {
                            Id = 88,
                            ProductId = 15,
                            ProductQuantity = 10,
                            Size = 42,
                            inStock = true
                        },
                        new
                        {
                            Id = 89,
                            ProductId = 15,
                            ProductQuantity = 10,
                            Size = 43,
                            inStock = true
                        },
                        new
                        {
                            Id = 90,
                            ProductId = 15,
                            ProductQuantity = 0,
                            Size = 44,
                            inStock = false
                        },
                        new
                        {
                            Id = 91,
                            ProductId = 15,
                            ProductQuantity = 0,
                            Size = 45,
                            inStock = false
                        },
                        new
                        {
                            Id = 92,
                            ProductId = 15,
                            ProductQuantity = 0,
                            Size = 46,
                            inStock = false
                        });
                });

            modelBuilder.Entity("Core.Entities.Store.StoreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MapLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkingHours")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Antonovycha, 176, Ground Floor, Left from Eldorado, Across from Butlers",
                            City = "Kiyv",
                            MapLink = "Link to map",
                            Name = "TRC Ocean Plaza",
                            WorkingHours = "Daily 10:00 - 22:00"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Dniprovska Naberezhna, 12, Second Floor",
                            City = "Kiyv",
                            MapLink = "Link to map",
                            Name = "TRC River Mall",
                            WorkingHours = "Daily 10:00 - 22:00"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Prospekt Obolonsky, 1-B, First Floor, Atrium Greece 5B",
                            City = "Kiyv",
                            MapLink = "Link to map",
                            Name = "TRC DREAM Yellow",
                            WorkingHours = "Daily 10:00 - 22:00"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Berkovetska, 6-D, First Floor, First Quarter from the Entrance near Epicentr",
                            City = "Kiyv",
                            MapLink = "Link to map",
                            Name = "TRC Lavina Mall",
                            WorkingHours = "Daily 10:00 - 22:00"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Kiltseva Doroga, 1, First Floor",
                            City = "Kiyv",
                            MapLink = "Link to map",
                            Name = "TRC Respublika Park",
                            WorkingHours = "Daily 10:00 - 22:00"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Prospekt Pravdy, 47, First Floor, Near Colin's",
                            City = "Kiyv",
                            MapLink = "Link to map",
                            Name = "TRC Retroville",
                            WorkingHours = "Daily 10:00 - 22:00"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Prospekt Stepana Bandery, 36, First Floor",
                            City = "Kiyv",
                            MapLink = "Link to map",
                            Name = "TRC Blockbuster Mall",
                            WorkingHours = "Daily 10:00 - 22:00"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Gnata Khotkevycha, 1-B, First Floor, Left from Ashan Entrance",
                            City = "Kiyv",
                            MapLink = "Link to map",
                            Name = "TRK Prospekt",
                            WorkingHours = "Daily 10:00 - 22:00"
                        },
                        new
                        {
                            Id = 9,
                            Address = "600-Richchia, 17, New Building, First Floor, Central Alley",
                            City = "Vinnytsia",
                            MapLink = "Link to map",
                            Name = "TRC Megamall",
                            WorkingHours = "Daily 10:00 - 21:00"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Mykoly Ovodova, 51, First Floor, Entrance from Soborna Street, Near Toy House",
                            City = "Vinnytsia",
                            MapLink = "Link to map",
                            Name = "TRC Sky Park",
                            WorkingHours = "Daily 10:00 - 21:00"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Queen Elizabeth II (Hlinka), 2, Ground Floor",
                            City = "Dnipro",
                            MapLink = "Link to map",
                            Name = "TRC MOST City",
                            WorkingHours = "Daily 10:00 - 21:00"
                        },
                        new
                        {
                            Id = 12,
                            Address = "Nyzhnedniprovskaya, 17, First Floor, Near the Fountain",
                            City = "Dnipro",
                            MapLink = "Link to map",
                            Name = "TRC Karavan",
                            WorkingHours = "Daily 10:00 - 21:00"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Kyivska, 77, First Floor, Across from LC Waikiki",
                            City = "Zhytomyr",
                            MapLink = "Link to map",
                            Name = "TRC Global",
                            WorkingHours = "Daily 10:00 - 21:00"
                        },
                        new
                        {
                            Id = 14,
                            Address = "Ivana Mykolaychuka, 2, Across from Samsung",
                            City = "Ivano-Frankivsk",
                            MapLink = "Link to map",
                            Name = "Shopping Mall ARSEN",
                            WorkingHours = "Daily 10:00 - 21:00"
                        },
                        new
                        {
                            Id = 15,
                            Address = "4 Varshavska Street",
                            City = "Kovel",
                            MapLink = "Link to map",
                            Name = "Juvent Shopping Center (Boutique 110)",
                            WorkingHours = "Daily 10:00 - 18:00"
                        },
                        new
                        {
                            Id = 16,
                            Address = "1 Sukhomlynskoho Street, Second Floor, Near Escalator",
                            City = "Lutsk",
                            MapLink = "Link to map",
                            Name = "PortCity Shopping Mall",
                            WorkingHours = "Daily 10:00 - 22:00"
                        },
                        new
                        {
                            Id = 17,
                            Address = "1 Voli Avenue, Fourth Floor, Near Escalator",
                            City = "Lutsk",
                            MapLink = "Link to map",
                            Name = "TSUM Lutsk",
                            WorkingHours = "Daily 09:30 - 21:00"
                        },
                        new
                        {
                            Id = 18,
                            Address = "9 Voli Avenue, Building Facade, Across from Kavarnia Dim Kavy",
                            City = "Lutsk",
                            MapLink = "Link to map",
                            Name = "ESTRO Store (Voli, 9)",
                            WorkingHours = "Daily 09:00 - 21:00"
                        },
                        new
                        {
                            Id = 19,
                            Address = "1 Karpenka-Karyho Street",
                            City = "Lutsk",
                            MapLink = "Link to map",
                            Name = "Juvent Shopping Center (Boutique 125)",
                            WorkingHours = "Daily 09:00 - 21:00"
                        },
                        new
                        {
                            Id = 20,
                            Address = "7b Pid Dubom Street, Second Floor, Near Kredens Café",
                            City = "Lviv",
                            MapLink = "Link to map",
                            Name = "Forum Lviv Shopping Mall",
                            WorkingHours = "Daily 10:00 - 21:00"
                        },
                        new
                        {
                            Id = 21,
                            Address = "226-A Kulparkivska Street, First Floor, Near Kredens Café",
                            City = "Lviv",
                            MapLink = "Link to map",
                            Name = "Victoria Gardens Shopping Mall",
                            WorkingHours = "Daily 10:00 - 20:00"
                        },
                        new
                        {
                            Id = 22,
                            Address = "30 Stryiska Street, First Floor, Near Elevator",
                            City = "Lviv",
                            MapLink = "Link to map",
                            Name = "King Cross Leopolis Shopping Mall",
                            WorkingHours = "Daily 10:00 - 21:00"
                        },
                        new
                        {
                            Id = 23,
                            Address = "14 Doroshenka Street, Building Facade, Near Tram Stops #1 and #2",
                            City = "Lviv",
                            MapLink = "Link to map",
                            Name = "ESTRO Store (Doroshenka, 14)",
                            WorkingHours = "Daily 10:00 - 20:00"
                        },
                        new
                        {
                            Id = 24,
                            Address = "2 Prospekt Nezalezhnosti (Heavenly Hundred Avenue), First Floor, Near Sundays Coffee",
                            City = "Odesa",
                            MapLink = "Link to map",
                            Name = "City Center Shopping Mall",
                            WorkingHours = "Daily 10:00 - 21:00"
                        },
                        new
                        {
                            Id = 25,
                            Address = "23 Kulyka i Hudacheka (Makarova), Left Wing of the Shopping Center, Near Athletics",
                            City = "Rivne",
                            MapLink = "Link to map",
                            Name = "Equator Shopping Mall",
                            WorkingHours = "Daily 10:00 - 22:00"
                        },
                        new
                        {
                            Id = 26,
                            Address = "1 Oleksandra Borysenka (Korolenka), First Floor, Near Allo Max",
                            City = "Rivne",
                            MapLink = "Link to map",
                            Name = "Zlata Plaza Shopping Mall",
                            WorkingHours = "Daily 10:00 - 21:00"
                        },
                        new
                        {
                            Id = 27,
                            Address = "9 Heroiv Pratsi, First Floor",
                            City = "Kharkiv",
                            MapLink = "Link to map",
                            Name = "Dafi Shopping Mall",
                            WorkingHours = "Daily 10:00 - 20:00"
                        },
                        new
                        {
                            Id = 28,
                            Address = "2a Pushkinska, Third Floor, Near the Escalator",
                            City = "Kharkiv",
                            MapLink = "Link to map",
                            Name = "Nikolsky Shopping Mall",
                            WorkingHours = "Daily 10:00 - 21:00"
                        },
                        new
                        {
                            Id = 29,
                            Address = "265A Haharina, First Floor, Near Vovk",
                            City = "Chernivtsi",
                            MapLink = "Link to map",
                            Name = "DEPO't Center Shopping Mall",
                            WorkingHours = "Daily 10:00 - 20:00"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Core.Entities.DashBoard.User", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int?>("BagId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("Core.Entities.Category.CategoryEntity", b =>
                {
                    b.HasOne("Core.Entities.Category.SubCategory", "SubCategory")
                        .WithMany("Categories")
                        .HasForeignKey("SubCategoryId");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Core.Entities.Category.SubCategory", b =>
                {
                    b.HasOne("Core.Entities.Category.MainCategory", "MainCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("MainCategoryId");

                    b.Navigation("MainCategory");
                });

            modelBuilder.Entity("Core.Entities.Information.Bag", b =>
                {
                    b.HasOne("Core.Entities.DashBoard.User", "User")
                        .WithOne("Bag")
                        .HasForeignKey("Core.Entities.Information.Bag", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.Information.BagItems", b =>
                {
                    b.HasOne("Core.Entities.Information.Bag", "Bag")
                        .WithMany("BagItems")
                        .HasForeignKey("BagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Product.ProductEntity", "Product")
                        .WithMany("BagItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bag");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Entities.Information.Order", b =>
                {
                    b.HasOne("Core.Entities.DashBoard.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.Information.OrderItems", b =>
                {
                    b.HasOne("Core.Entities.Information.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Core.Entities.Product.ImageEntity", b =>
                {
                    b.HasOne("Core.Entities.Product.ProductEntity", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Entities.Product.Options", b =>
                {
                    b.HasOne("Core.Entities.Product.Info", "Info")
                        .WithMany("Options")
                        .HasForeignKey("InfoId");

                    b.Navigation("Info");
                });

            modelBuilder.Entity("Core.Entities.Product.ProductEntity", b =>
                {
                    b.HasOne("Core.Entities.Category.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Core.Entities.Product.StorageEntity", b =>
                {
                    b.HasOne("Core.Entities.Product.ProductEntity", "Product")
                        .WithMany("Storages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Category.CategoryEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Core.Entities.Category.MainCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Core.Entities.Category.SubCategory", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Core.Entities.Information.Bag", b =>
                {
                    b.Navigation("BagItems");
                });

            modelBuilder.Entity("Core.Entities.Information.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Core.Entities.Product.Info", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("Core.Entities.Product.ProductEntity", b =>
                {
                    b.Navigation("BagItems");

                    b.Navigation("Images");

                    b.Navigation("Storages");
                });

            modelBuilder.Entity("Core.Entities.DashBoard.User", b =>
                {
                    b.Navigation("Bag");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
