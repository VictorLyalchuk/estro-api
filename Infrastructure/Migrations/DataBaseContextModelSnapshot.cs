// <auto-generated />
using System;
using System.Collections.Generic;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Address.AddressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AddressEntity");
                });

            modelBuilder.Entity("Core.Entities.Address.CityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CityName_en")
                        .HasColumnType("text");

                    b.Property<string>("CityName_es")
                        .HasColumnType("text");

                    b.Property<string>("CityName_fr")
                        .HasColumnType("text");

                    b.Property<string>("CityName_uk")
                        .HasColumnType("text");

                    b.Property<int?>("CountryID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryID");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityName_en = "Kyiv",
                            CityName_es = "Kiev",
                            CityName_fr = "Kiev",
                            CityName_uk = "Київ",
                            CountryID = 1
                        },
                        new
                        {
                            Id = 2,
                            CityName_en = "Vinnytsia",
                            CityName_es = "Vinnitsa",
                            CityName_fr = "Vinnitsa",
                            CityName_uk = "Вінниця",
                            CountryID = 1
                        },
                        new
                        {
                            Id = 3,
                            CityName_en = "Dnipro",
                            CityName_es = "Dniepr",
                            CityName_fr = "Dniepr",
                            CityName_uk = "Дніпро",
                            CountryID = 1
                        },
                        new
                        {
                            Id = 4,
                            CityName_en = "Zhytomyr",
                            CityName_es = "Jytomyr",
                            CityName_fr = "Jytomyr",
                            CityName_uk = "Житомир",
                            CountryID = 1
                        },
                        new
                        {
                            Id = 5,
                            CityName_en = "Ivano-Frankivsk",
                            CityName_es = "Ivano-Frankivsk",
                            CityName_fr = "Ivano-Frankivsk",
                            CityName_uk = "Івано-Франківськ",
                            CountryID = 1
                        },
                        new
                        {
                            Id = 6,
                            CityName_en = "Kovel",
                            CityName_es = "Kovel",
                            CityName_fr = "Kovel",
                            CityName_uk = "Ковель",
                            CountryID = 1
                        },
                        new
                        {
                            Id = 7,
                            CityName_en = "Lutsk",
                            CityName_es = "Loutsk",
                            CityName_fr = "Loutsk",
                            CityName_uk = "Луцьк",
                            CountryID = 1
                        },
                        new
                        {
                            Id = 8,
                            CityName_en = "Lviv",
                            CityName_es = "Lviv",
                            CityName_fr = "Lviv",
                            CityName_uk = "Львів",
                            CountryID = 1
                        },
                        new
                        {
                            Id = 9,
                            CityName_en = "Odesa",
                            CityName_es = "Odessa",
                            CityName_fr = "Odessa",
                            CityName_uk = "Одеса",
                            CountryID = 1
                        },
                        new
                        {
                            Id = 10,
                            CityName_en = "Rivne",
                            CityName_es = "Rovno",
                            CityName_fr = "Rovno",
                            CityName_uk = "Рівне",
                            CountryID = 1
                        },
                        new
                        {
                            Id = 11,
                            CityName_en = "Kharkiv",
                            CityName_es = "Kharkov",
                            CityName_fr = "Kharkov",
                            CityName_uk = "Харків",
                            CountryID = 1
                        },
                        new
                        {
                            Id = 12,
                            CityName_en = "Chernivtsi",
                            CityName_es = "Tchernivtsi",
                            CityName_fr = "Tchernivtsi",
                            CityName_uk = "Чернівці",
                            CountryID = 1
                        });
                });

            modelBuilder.Entity("Core.Entities.Address.CountryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryName_en")
                        .HasColumnType("text");

                    b.Property<string>("CountryName_es")
                        .HasColumnType("text");

                    b.Property<string>("CountryName_fr")
                        .HasColumnType("text");

                    b.Property<string>("CountryName_uk")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryName_en = "Ukraine",
                            CountryName_es = "Ucrania",
                            CountryName_fr = "Ukraine",
                            CountryName_uk = "Україна"
                        },
                        new
                        {
                            Id = 2,
                            CountryName_en = "England",
                            CountryName_es = "Inglaterra",
                            CountryName_fr = "Angleterre",
                            CountryName_uk = "Англія"
                        },
                        new
                        {
                            Id = 3,
                            CountryName_en = "Spain",
                            CountryName_es = "España",
                            CountryName_fr = "Espagne",
                            CountryName_uk = "Іспанія"
                        },
                        new
                        {
                            Id = 4,
                            CountryName_en = "France",
                            CountryName_es = "Francia",
                            CountryName_fr = "France",
                            CountryName_uk = "Франція"
                        },
                        new
                        {
                            Id = 5,
                            CountryName_en = "Poland",
                            CountryName_es = "Polonia",
                            CountryName_fr = "Pologne",
                            CountryName_uk = "Польща"
                        },
                        new
                        {
                            Id = 6,
                            CountryName_en = "USA",
                            CountryName_es = "Estados Unidos",
                            CountryName_fr = "États-Unis",
                            CountryName_uk = "США"
                        },
                        new
                        {
                            Id = 7,
                            CountryName_en = "Japan",
                            CountryName_es = "Japón",
                            CountryName_fr = "Japon",
                            CountryName_uk = "Японія"
                        });
                });

            modelBuilder.Entity("Core.Entities.Category.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("Name_es")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("Name_fr")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("Name_uk")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("URLName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name_en = "Open shoes",
                            Name_es = "Zapatos abiertos",
                            Name_fr = "Chaussures ouvertes",
                            Name_uk = "Відкрите взуття",
                            SubCategoryId = 1,
                            URLName = "open-shoes"
                        },
                        new
                        {
                            Id = 2,
                            Name_en = "Pumps and loafers",
                            Name_es = "Zapatos de tacón y mocasines",
                            Name_fr = "Escarpins et mocassins",
                            Name_uk = "Туфлі та лофери",
                            SubCategoryId = 1,
                            URLName = "pumps-and-loafers"
                        },
                        new
                        {
                            Id = 3,
                            Name_en = "Heeled shoes",
                            Name_es = "Zapatos de tacón",
                            Name_fr = "Chaussures à talons",
                            Name_uk = "Туфлі на підборах",
                            SubCategoryId = 1,
                            URLName = "heeled-shoes"
                        },
                        new
                        {
                            Id = 4,
                            Name_en = "Women's athletic sneakers",
                            Name_es = "Zapatillas deportivas para mujeres",
                            Name_fr = "Baskets de sport pour femmes",
                            Name_uk = "Кросівки жіночі",
                            SubCategoryId = 1,
                            URLName = "women-s-athletic-sneakers"
                        },
                        new
                        {
                            Id = 5,
                            Name_en = "Women's sneakers",
                            Name_es = "Zapatillas para mujeres",
                            Name_fr = "Baskets pour femmes",
                            Name_uk = "Жіночі кеди",
                            SubCategoryId = 1,
                            URLName = "women-sneakers"
                        },
                        new
                        {
                            Id = 6,
                            Name_en = "High boots and Chelsea",
                            Name_es = "Botas altas y Chelsea",
                            Name_fr = "Bottes hautes et Chelsea",
                            Name_uk = "Високі черевики, челсі",
                            SubCategoryId = 1,
                            URLName = "high-boots-&-chelsea"
                        },
                        new
                        {
                            Id = 7,
                            Name_en = "Boots on heels",
                            Name_es = "Botas de tacón",
                            Name_fr = "Bottes à talons",
                            Name_uk = "Черевики на підборах",
                            SubCategoryId = 1,
                            URLName = "boots-on-heels"
                        },
                        new
                        {
                            Id = 8,
                            Name_en = "Boots and high boots",
                            Name_es = "Botas y botas altas",
                            Name_fr = "Bottes et bottes hautes",
                            Name_uk = "Чоботи та ботфорти",
                            SubCategoryId = 1,
                            URLName = "boots-and-high-boots"
                        },
                        new
                        {
                            Id = 9,
                            Name_en = "Cossacks boots",
                            Name_es = "Botas de cosaco",
                            Name_fr = "Bottes Cossacks",
                            Name_uk = "Козаки",
                            SubCategoryId = 1,
                            URLName = "cossacks-boots"
                        },
                        new
                        {
                            Id = 10,
                            Name_en = "Winter footwear",
                            Name_es = "Calzado de invierno",
                            Name_fr = "Chaussures d'hiver",
                            Name_uk = "Зимове взуття",
                            SubCategoryId = 1,
                            URLName = "winter-footwear"
                        },
                        new
                        {
                            Id = 11,
                            Name_en = "Perforated shoes",
                            Name_es = "Zapatos perforados",
                            Name_fr = "Chaussures perforées",
                            Name_uk = "Перфороване взуття",
                            SubCategoryId = 1,
                            URLName = "perforated-shoes"
                        },
                        new
                        {
                            Id = 12,
                            Name_en = "Men's boots",
                            Name_es = "Botas para hombres",
                            Name_fr = "Bottes pour hommes",
                            Name_uk = "Чоловічі черевики",
                            SubCategoryId = 2,
                            URLName = "men-boots"
                        },
                        new
                        {
                            Id = 13,
                            Name_en = "Men's athletic sneakers",
                            Name_es = "Zapatillas deportivas para hombres",
                            Name_fr = "Baskets de sport pour hommes",
                            Name_uk = "Чоловічі кросівки",
                            SubCategoryId = 2,
                            URLName = "man-athletic-sneakers"
                        },
                        new
                        {
                            Id = 14,
                            Name_en = "Men's sneakers",
                            Name_es = "Zapatillas para hombres",
                            Name_fr = "Baskets pour hommes",
                            Name_uk = "Чоловічі кеди",
                            SubCategoryId = 2,
                            URLName = "man-sneakers"
                        },
                        new
                        {
                            Id = 15,
                            Name_en = "Men's pumps",
                            Name_es = "Zapatos de tacón para hombres",
                            Name_fr = "Escarpins pour hommes",
                            Name_uk = "Чоловічі туфлі",
                            SubCategoryId = 2,
                            URLName = "man-pumps"
                        },
                        new
                        {
                            Id = 16,
                            Name_en = "Men's moccasins",
                            Name_es = "Mocasines para hombres",
                            Name_fr = "Mocassins pour hommes",
                            Name_uk = "Чоловічі мокасини",
                            SubCategoryId = 2,
                            URLName = "man-moccasins"
                        },
                        new
                        {
                            Id = 17,
                            Name_en = "Men's summer shoes",
                            Name_es = "Zapatos de verano para hombres",
                            Name_fr = "Chaussures d'été pour hommes",
                            Name_uk = "Чоловічі літнє взуття",
                            SubCategoryId = 2,
                            URLName = "man-summer-shoes"
                        },
                        new
                        {
                            Id = 18,
                            Name_en = "Women's outerwear",
                            Name_es = "Ropa exterior para mujeres",
                            Name_fr = "Vêtements d'extérieur pour femmes",
                            Name_uk = "Жіночий верхній одяг",
                            SubCategoryId = 3,
                            URLName = "woman-outerwear"
                        },
                        new
                        {
                            Id = 19,
                            Name_en = "Women's sweaters and suits",
                            Name_es = "Suéteres y trajes para mujeres",
                            Name_fr = "Pulls et costumes pour femmes",
                            Name_uk = "Жіночі светри та костюми",
                            SubCategoryId = 3,
                            URLName = "woman-sweaters-and-suits"
                        },
                        new
                        {
                            Id = 20,
                            Name_en = "Women's t-shirts and sweatshirts",
                            Name_es = "Camisetas y sudaderas para mujeres",
                            Name_fr = "T-shirts et sweatshirts pour femmes",
                            Name_uk = "Жіночі футболки та світшоти",
                            SubCategoryId = 3,
                            URLName = "woman-t-shirts-and-sweatshirts"
                        },
                        new
                        {
                            Id = 21,
                            Name_en = "Women's shawl",
                            Name_es = "Chal para mujeres",
                            Name_fr = "Châle pour femmes",
                            Name_uk = "Жіночі хустки",
                            SubCategoryId = 3,
                            URLName = "woman-shawl"
                        },
                        new
                        {
                            Id = 22,
                            Name_en = "Women's scarves and hats",
                            Name_es = "Bufandas y sombreros para mujeres",
                            Name_fr = "Écharpes et chapeaux pour femmes",
                            Name_uk = "Жіночі шарфи та шапки",
                            SubCategoryId = 3,
                            URLName = "woman-scarves-and-hats"
                        },
                        new
                        {
                            Id = 23,
                            Name_en = "Women's gloves",
                            Name_es = "Guantes para mujeres",
                            Name_fr = "Gants pour femmes",
                            Name_uk = "Жіночі рукавички",
                            SubCategoryId = 3,
                            URLName = "woman-gloves"
                        },
                        new
                        {
                            Id = 24,
                            Name_en = "Women's socks and tights",
                            Name_es = "Calcetines y pantimedias para mujeres",
                            Name_fr = "Chaussettes et collants pour femmes",
                            Name_uk = "Жіночі шкарпетки та колготи",
                            SubCategoryId = 3,
                            URLName = "woman-socks-and-tights"
                        },
                        new
                        {
                            Id = 25,
                            Name_en = "Men's outerwear",
                            Name_es = "Ropa exterior para hombres",
                            Name_fr = "Vêtements d'extérieur pour hommes",
                            Name_uk = "Чоловічий верхній одяг",
                            SubCategoryId = 4,
                            URLName = "man-outerwear"
                        },
                        new
                        {
                            Id = 26,
                            Name_en = "Men's sweaters and suits",
                            Name_es = "Suéteres y trajes para hombres",
                            Name_fr = "Pulls et costumes pour hommes",
                            Name_uk = "Чоловічі светри та костюми",
                            SubCategoryId = 4,
                            URLName = "man-sweaters-and-suits"
                        },
                        new
                        {
                            Id = 27,
                            Name_en = "Men's t-shirts and sweatshirts",
                            Name_es = "Camisetas y sudaderas para hombres",
                            Name_fr = "T-shirts et sweatshirts pour hommes",
                            Name_uk = "Чоловікі футболки та світшоти",
                            SubCategoryId = 4,
                            URLName = "man-t-shirts-and-sweatshirts"
                        },
                        new
                        {
                            Id = 28,
                            Name_en = "Men's scarves and hats",
                            Name_es = "Bufandas y sombreros para hombres",
                            Name_fr = "Écharpes et chapeaux pour hommes",
                            Name_uk = "Чоловічі шарфи та шапки",
                            SubCategoryId = 4,
                            URLName = "man-scarves-and-hats"
                        },
                        new
                        {
                            Id = 29,
                            Name_en = "Men's gloves",
                            Name_es = "Guantes para hombres",
                            Name_fr = "Gants pour hommes",
                            Name_uk = "Чоловічі рукавички",
                            SubCategoryId = 4,
                            URLName = "man-gloves"
                        },
                        new
                        {
                            Id = 30,
                            Name_en = "Men's socks",
                            Name_es = "Calcetines para hombres",
                            Name_fr = "Chaussettes pour hommes",
                            Name_uk = "Чоловічі шкарпетки",
                            SubCategoryId = 4,
                            URLName = "man-socks"
                        },
                        new
                        {
                            Id = 31,
                            Name_en = "Women's glasses",
                            Name_es = "Gafas para mujeres",
                            Name_fr = "Lunettes pour femmes",
                            Name_uk = "Жіночі окуляри",
                            SubCategoryId = 5,
                            URLName = "woman-glasses"
                        },
                        new
                        {
                            Id = 32,
                            Name_en = "Women's home shoes",
                            Name_es = "Zapatos de casa para mujeres",
                            Name_fr = "Chaussures de maison pour femmes",
                            Name_uk = "Жіноче домашнє взуття",
                            SubCategoryId = 5,
                            URLName = "woman-home-shoes"
                        },
                        new
                        {
                            Id = 33,
                            Name_en = "Women's bags",
                            Name_es = "Bolsos para mujeres",
                            Name_fr = "Sacs pour femmes",
                            Name_uk = "Жіночі сумки",
                            SubCategoryId = 5,
                            URLName = "woman-bags"
                        },
                        new
                        {
                            Id = 34,
                            Name_en = "Women's backpacks",
                            Name_es = "Mochilas para mujeres",
                            Name_fr = "Sacs à dos pour femmes",
                            Name_uk = "Жіночі рюкзаки для жінок",
                            SubCategoryId = 5,
                            URLName = "woman-backpacks"
                        },
                        new
                        {
                            Id = 35,
                            Name_en = "Women's care products",
                            Name_es = "Productos de cuidado para mujeres",
                            Name_fr = "Produits de soin pour femmes",
                            Name_uk = "Жіночі засоби для догляду",
                            SubCategoryId = 5,
                            URLName = "woman-care-products"
                        },
                        new
                        {
                            Id = 36,
                            Name_en = "Men's glasses",
                            Name_es = "Gafas para hombres",
                            Name_fr = "Lunettes pour hommes",
                            Name_uk = "Чоловічі окуляри",
                            SubCategoryId = 6,
                            URLName = "man-glasses"
                        },
                        new
                        {
                            Id = 37,
                            Name_en = "Men's home shoes",
                            Name_es = "Zapatos de casa para hombres",
                            Name_fr = "Chaussures de maison pour hommes",
                            Name_uk = "Чоловіче домашнє взуття",
                            SubCategoryId = 6,
                            URLName = "man-home-shoes"
                        },
                        new
                        {
                            Id = 38,
                            Name_en = "Men's bags",
                            Name_es = "Bolsos para hombres",
                            Name_fr = "Sacs pour hommes",
                            Name_uk = "Чоловічі сумки",
                            SubCategoryId = 6,
                            URLName = "man-bags"
                        },
                        new
                        {
                            Id = 39,
                            Name_en = "Men's backpacks",
                            Name_es = "Mochilas para hombres",
                            Name_fr = "Sacs à dos pour hommes",
                            Name_uk = "Чоловічі рюкзаки",
                            SubCategoryId = 6,
                            URLName = "man-backpacks"
                        },
                        new
                        {
                            Id = 40,
                            Name_en = "Men's care products",
                            Name_es = "Productos de cuidado para hombres",
                            Name_fr = "Produits de soin pour hommes",
                            Name_uk = "Чоловічі засоби для догляду",
                            SubCategoryId = 6,
                            URLName = "man-care-products"
                        });
                });

            modelBuilder.Entity("Core.Entities.Category.MainCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("Name_es")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("Name_fr")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("Name_uk")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("URLName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MainCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name_en = "Women",
                            Name_es = "Mujer",
                            Name_fr = "Femme",
                            Name_uk = "Жіноче",
                            URLName = "woman"
                        },
                        new
                        {
                            Id = 2,
                            Name_en = "Men",
                            Name_es = "Hombre",
                            Name_fr = "Homme",
                            Name_uk = "Чоловіче",
                            URLName = "man"
                        });
                });

            modelBuilder.Entity("Core.Entities.Category.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<int?>("MainCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("Name_es")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("Name_fr")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("Name_uk")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<string>("URLName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MainCategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MainCategoryId = 1,
                            Name_en = "Women's Shoes",
                            Name_es = "Zapatos de mujer",
                            Name_fr = "Chaussures pour femmes",
                            Name_uk = "Жіноче взуття",
                            URLName = "woman-shoes"
                        },
                        new
                        {
                            Id = 2,
                            MainCategoryId = 2,
                            Name_en = "Men's Shoes",
                            Name_es = "Zapatos de hombre",
                            Name_fr = "Chaussures pour hommes",
                            Name_uk = "Чоловіче взуття",
                            URLName = "man-shoes"
                        },
                        new
                        {
                            Id = 3,
                            MainCategoryId = 1,
                            Name_en = "Women's Clothing",
                            Name_es = "Ropa de mujer",
                            Name_fr = "Vêtements pour femmes",
                            Name_uk = "Жіночий одяг",
                            URLName = "woman-clothing"
                        },
                        new
                        {
                            Id = 4,
                            MainCategoryId = 2,
                            Name_en = "Men's Clothing",
                            Name_es = "Ropa de hombre",
                            Name_fr = "Vêtements pour hommes",
                            Name_uk = "Чоловічий одяг",
                            URLName = "man-clothing"
                        },
                        new
                        {
                            Id = 5,
                            MainCategoryId = 1,
                            Name_en = "Women's Accessories",
                            Name_es = "Accesorios de mujer",
                            Name_fr = "Accessoires pour femmes",
                            Name_uk = "Жіночі аксесуари",
                            URLName = "woman-accessories"
                        },
                        new
                        {
                            Id = 6,
                            MainCategoryId = 2,
                            Name_en = "Men's Accessories",
                            Name_es = "Accesorios de hombre",
                            Name_fr = "Accessoires pour hommes",
                            Name_uk = "Чоловічі аксесуари",
                            URLName = "man-accessories"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product.ImageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagePath = "Product1_1.webp",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImagePath = "Product1_2.webp",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            ImagePath = "Product1_3.webp",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 4,
                            ImagePath = "Product1_4.webp",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 5,
                            ImagePath = "Product1_5.webp",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 6,
                            ImagePath = "Product1_6.webp",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 7,
                            ImagePath = "Product2_1.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 8,
                            ImagePath = "Product2_2.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 9,
                            ImagePath = "Product2_3.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 10,
                            ImagePath = "Product2_4.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 11,
                            ImagePath = "Product2_5.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 12,
                            ImagePath = "Product2_6.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 13,
                            ImagePath = "Product2_7.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 14,
                            ImagePath = "Product2_8.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 15,
                            ImagePath = "Product2_9.webp",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 16,
                            ImagePath = "Product3_1.webp",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 17,
                            ImagePath = "Product3_2.webp",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 18,
                            ImagePath = "Product3_3.webp",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 19,
                            ImagePath = "Product3_4.webp",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 20,
                            ImagePath = "Product3_5.webp",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 21,
                            ImagePath = "Product4_1.webp",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 22,
                            ImagePath = "Product4_2.webp",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 23,
                            ImagePath = "Product4_3.webp",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 24,
                            ImagePath = "Product4_4.webp",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 25,
                            ImagePath = "Product4_5.webp",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 26,
                            ImagePath = "Product4_6.webp",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 27,
                            ImagePath = "Product5_1.webp",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 28,
                            ImagePath = "Product5_2.webp",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 29,
                            ImagePath = "Product5_3.webp",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 30,
                            ImagePath = "Product5_4.webp",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 31,
                            ImagePath = "Product5_5.webp",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 32,
                            ImagePath = "Product5_6.webp",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 33,
                            ImagePath = "Product6_1.webp",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 34,
                            ImagePath = "Product6_2.webp",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 35,
                            ImagePath = "Product6_3.webp",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 36,
                            ImagePath = "Product6_4.webp",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 37,
                            ImagePath = "Product6_5.webp",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 38,
                            ImagePath = "Product6_6.webp",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 39,
                            ImagePath = "Product7_1.webp",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 40,
                            ImagePath = "Product7_2.webp",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 41,
                            ImagePath = "Product7_3.webp",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 42,
                            ImagePath = "Product7_4.webp",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 43,
                            ImagePath = "Product7_5.webp",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 44,
                            ImagePath = "Product8_1.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 45,
                            ImagePath = "Product8_2.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 46,
                            ImagePath = "Product8_3.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 47,
                            ImagePath = "Product8_4.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 48,
                            ImagePath = "Product8_5.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 49,
                            ImagePath = "Product8_6.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 50,
                            ImagePath = "Product8_7.webp",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 51,
                            ImagePath = "Product9_1.webp",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 52,
                            ImagePath = "Product9_2.webp",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 53,
                            ImagePath = "Product9_3.webp",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 54,
                            ImagePath = "Product9_4.webp",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 55,
                            ImagePath = "Product9_5.webp",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 56,
                            ImagePath = "Product9_6.webp",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 57,
                            ImagePath = "Product10_1.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 58,
                            ImagePath = "Product10_2.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 59,
                            ImagePath = "Product10_3.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 60,
                            ImagePath = "Product10_4.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 61,
                            ImagePath = "Product10_5.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 62,
                            ImagePath = "Product10_6.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 63,
                            ImagePath = "Product10_7.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 64,
                            ImagePath = "Product10_8.webp",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 65,
                            ImagePath = "Product11_1.webp",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 66,
                            ImagePath = "Product11_2.webp",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 67,
                            ImagePath = "Product11_3.webp",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 68,
                            ImagePath = "Product11_4.webp",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 69,
                            ImagePath = "Product11_5.webp",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 70,
                            ImagePath = "Product11_6.webp",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 71,
                            ImagePath = "Product12_1.webp",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 72,
                            ImagePath = "Product12_2.webp",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 73,
                            ImagePath = "Product12_3.webp",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 74,
                            ImagePath = "Product12_4.webp",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 75,
                            ImagePath = "Product12_5.webp",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 76,
                            ImagePath = "Product12_6.webp",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 77,
                            ImagePath = "Product13_1.webp",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 78,
                            ImagePath = "Product13_2.webp",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 79,
                            ImagePath = "Product13_3.webp",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 80,
                            ImagePath = "Product13_4.webp",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 81,
                            ImagePath = "Product13_5.webp",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 82,
                            ImagePath = "Product13_6.webp",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 83,
                            ImagePath = "Product14_1.webp",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 84,
                            ImagePath = "Product14_2.webp",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 85,
                            ImagePath = "Product14_3.webp",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 86,
                            ImagePath = "Product14_4.webp",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 87,
                            ImagePath = "Product14_5.webp",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 88,
                            ImagePath = "Product14_6.webp",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 89,
                            ImagePath = "Product15_1.webp",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 90,
                            ImagePath = "Product15_2.webp",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 91,
                            ImagePath = "Product15_3.webp",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 92,
                            ImagePath = "Product15_4.webp",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 93,
                            ImagePath = "Product15_5.webp",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 94,
                            ImagePath = "Product15_6.webp",
                            ProductId = 15
                        });
                });

            modelBuilder.Entity("Core.Entities.Product.ImageForHome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ImageForHome");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagePath = "800_home_page_1.webp"
                        },
                        new
                        {
                            Id = 2,
                            ImagePath = "800_home_page_2.webp"
                        },
                        new
                        {
                            Id = 3,
                            ImagePath = "800_home_page_3.webp"
                        },
                        new
                        {
                            Id = 4,
                            ImagePath = "800_home_page_4.webp"
                        },
                        new
                        {
                            Id = 5,
                            ImagePath = "800_home_page_5.webp"
                        },
                        new
                        {
                            Id = 6,
                            ImagePath = "800_home_page_6.webp"
                        },
                        new
                        {
                            Id = 7,
                            ImagePath = "800_home_page_7.webp"
                        },
                        new
                        {
                            Id = 8,
                            ImagePath = "800_home_page_8.webp"
                        },
                        new
                        {
                            Id = 9,
                            ImagePath = "800_home_page_9.webp"
                        },
                        new
                        {
                            Id = 10,
                            ImagePath = "800_home_page_10.webp"
                        },
                        new
                        {
                            Id = 11,
                            ImagePath = "800_home_page_11.webp"
                        },
                        new
                        {
                            Id = 12,
                            ImagePath = "800_home_page_12.webp"
                        },
                        new
                        {
                            Id = 13,
                            ImagePath = "800_home_page_13.webp"
                        },
                        new
                        {
                            Id = 14,
                            ImagePath = "800_home_page_14.webp"
                        },
                        new
                        {
                            Id = 15,
                            ImagePath = "800_home_page_15.webp"
                        },
                        new
                        {
                            Id = 16,
                            ImagePath = "800_home_page_16.webp"
                        },
                        new
                        {
                            Id = 17,
                            ImagePath = "800_home_page_17.webp"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product.Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_es")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_fr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_uk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Info");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name_en = "Color",
                            Name_es = "Color",
                            Name_fr = "Couleur",
                            Name_uk = "Колір",
                            Value = "color"
                        },
                        new
                        {
                            Id = 2,
                            Name_en = "Material",
                            Name_es = "Material",
                            Name_fr = "Matériau",
                            Name_uk = "Матеріал",
                            Value = "material"
                        },
                        new
                        {
                            Id = 3,
                            Name_en = "Size",
                            Name_es = "Tamaño",
                            Name_fr = "Taille",
                            Name_uk = "Розмір",
                            Value = "size"
                        },
                        new
                        {
                            Id = 4,
                            Name_en = "Purpose",
                            Name_es = "Propósito",
                            Name_fr = "But",
                            Name_uk = "Сезон",
                            Value = "purpose"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product.Options", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("InfoId")
                        .HasColumnType("integer");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InfoId");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InfoId = 1,
                            Label = "Black",
                            Value = "black"
                        },
                        new
                        {
                            Id = 2,
                            InfoId = 1,
                            Label = "Brown",
                            Value = "brown"
                        },
                        new
                        {
                            Id = 3,
                            InfoId = 1,
                            Label = "Gray",
                            Value = "gray"
                        },
                        new
                        {
                            Id = 4,
                            InfoId = 1,
                            Label = "Light Gray",
                            Value = "lightgray"
                        },
                        new
                        {
                            Id = 5,
                            InfoId = 1,
                            Label = "White",
                            Value = "white"
                        },
                        new
                        {
                            Id = 6,
                            InfoId = 1,
                            Label = "Milk",
                            Value = "milk"
                        },
                        new
                        {
                            Id = 7,
                            InfoId = 1,
                            Label = "Navi",
                            Value = "navi"
                        },
                        new
                        {
                            Id = 8,
                            InfoId = 1,
                            Label = "Blue",
                            Value = "blue"
                        },
                        new
                        {
                            Id = 9,
                            InfoId = 2,
                            Label = "Leather",
                            Value = "leather"
                        },
                        new
                        {
                            Id = 10,
                            InfoId = 2,
                            Label = "Suede",
                            Value = "suede"
                        },
                        new
                        {
                            Id = 11,
                            InfoId = 2,
                            Label = "Nubuck",
                            Value = "nubuck"
                        },
                        new
                        {
                            Id = 12,
                            InfoId = 2,
                            Label = "Textile",
                            Value = "textile"
                        },
                        new
                        {
                            Id = 13,
                            InfoId = 2,
                            Label = "Synthetic",
                            Value = "synthetic"
                        },
                        new
                        {
                            Id = 14,
                            InfoId = 2,
                            Label = "Eco Leather",
                            Value = "ecoleather"
                        },
                        new
                        {
                            Id = 15,
                            InfoId = 3,
                            Label = "35",
                            Value = "35"
                        },
                        new
                        {
                            Id = 16,
                            InfoId = 3,
                            Label = "36",
                            Value = "36"
                        },
                        new
                        {
                            Id = 17,
                            InfoId = 3,
                            Label = "37",
                            Value = "37"
                        },
                        new
                        {
                            Id = 18,
                            InfoId = 3,
                            Label = "38",
                            Value = "38"
                        },
                        new
                        {
                            Id = 19,
                            InfoId = 3,
                            Label = "39",
                            Value = "39"
                        },
                        new
                        {
                            Id = 20,
                            InfoId = 3,
                            Label = "40",
                            Value = "40"
                        },
                        new
                        {
                            Id = 21,
                            InfoId = 3,
                            Label = "41",
                            Value = "41"
                        },
                        new
                        {
                            Id = 25,
                            InfoId = 3,
                            Label = "42",
                            Value = "42"
                        },
                        new
                        {
                            Id = 26,
                            InfoId = 3,
                            Label = "43",
                            Value = "43"
                        },
                        new
                        {
                            Id = 27,
                            InfoId = 3,
                            Label = "44",
                            Value = "44"
                        },
                        new
                        {
                            Id = 28,
                            InfoId = 3,
                            Label = "45",
                            Value = "45"
                        },
                        new
                        {
                            Id = 29,
                            InfoId = 3,
                            Label = "46",
                            Value = "46"
                        },
                        new
                        {
                            Id = 30,
                            InfoId = 4,
                            Label = "Winter",
                            Value = "winter"
                        },
                        new
                        {
                            Id = 31,
                            InfoId = 4,
                            Label = "Spring",
                            Value = "spring"
                        },
                        new
                        {
                            Id = 32,
                            InfoId = 4,
                            Label = "Summer",
                            Value = "summer"
                        },
                        new
                        {
                            Id = 33,
                            InfoId = 4,
                            Label = "Autumn",
                            Value = "autumn"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("Highlights")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "ER00113828",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "These stylish black leather boots-stockings are a perfect blend of fashion and comfort. Crafted with high-quality leather, they provide a sleek and sophisticated look. Ideal for various occasions, these boots-stockings are a must-have in your wardrobe.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots-stockings are black leather",
                            Price = 7399m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 2,
                            Article = "ER00112019",
                            CategoryId = 8,
                            Color = "Brown",
                            Description = "Step into the season with elegance in these Autumn brown leather stretch boots. Meticulously crafted from premium leather, these boots offer both style and comfort. The stretch feature ensures a snug fit, while the rich brown color adds a touch of warmth to your autumn wardrobe. Perfect for any occasion, these boots are a fashion statement that complements your unique style. Embrace the essence of autumn with each step.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Autumn brown leather stretch boots",
                            Price = 8899m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 3,
                            Article = "ER00112018",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Autumn leather stretch boots",
                            Price = 8899m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 4,
                            Article = "ER00112022",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots autumn leather black",
                            Price = 9899m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 5,
                            Article = "ER00112011",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Black autumn leather stretch boots",
                            Price = 9899m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 6,
                            Article = "ER00113851",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Black demi-season boots",
                            Price = 8799m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 7,
                            Article = "ER00112023",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots-stockings leather black",
                            Price = 9989m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 8,
                            Article = "ER00114318",
                            CategoryId = 8,
                            Color = "Burgundy",
                            Description = "Estro ER00112018 Burgundy Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots-pipes with wide freebies are burgundy",
                            Price = 9989m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 9,
                            Article = "ER00112298",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Black leather Cossack boots",
                            Price = 8799m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 10,
                            Article = "ER00112123",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Black Leather Stretch Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 black leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots-stockings on a stiletto are black",
                            Price = 8699m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 11,
                            Article = "ER00112122",
                            CategoryId = 8,
                            Color = "Milk",
                            Description = "Estro ER00112018 Milk Leather Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 Milk leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Milk stiletto stocking boots",
                            Price = 8699m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 12,
                            Article = "ER00114239",
                            CategoryId = 8,
                            Color = "Brown",
                            Description = "Estro ER00112018 Milk Leather Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 Milk leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots-stockings on a stiletto are brown",
                            Price = 8399m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 13,
                            Article = "ER00114240",
                            CategoryId = 8,
                            Color = "Black",
                            Description = "Estro ER00112018 Milk Leather Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 Milk leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Boots-stockings on a stiletto are black",
                            Price = 8399m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 14,
                            Article = "ER00113949",
                            CategoryId = 7,
                            Color = "Black",
                            Description = "Estro ER00112018 Milk Leather Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 Milk leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Ankle boots are black",
                            Price = 2890m,
                            Purpose = "Autumn"
                        },
                        new
                        {
                            Id = 15,
                            Article = "ER00111942",
                            CategoryId = 12,
                            Color = "Black",
                            Description = "Estro ER00112018 Milk Leather Boots\r\n\r\nElevate your autumn style with the Estro ER00112018 Milk leather stretch boots. Crafted with a blend of high-quality leather and stretch material, these boots seamlessly marry fashion and comfort. The stretch element provides elasticity, ensuring a snug and flexible fit for easy wear. The sleek black color adds versatility, allowing for effortless pairing with various outfit styles.",
                            Details = "The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.",
                            Highlights = new List<string> { "Hand cut and sewn locally", "Dyed with our proprietary colors", "Pre-washed & pre-shrunk", "Ultra-soft 100% cotton" },
                            Material = "Leather",
                            Name = "Winter boots",
                            Price = 2290m,
                            Purpose = "Winter"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product.StorageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.Property<bool>("inStock")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Storage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            ProductQuantity = 8,
                            Size = 36,
                            inStock = true
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 1,
                            ProductQuantity = 20,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 1,
                            ProductQuantity = 40,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 1,
                            ProductQuantity = 10,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 1,
                            ProductQuantity = 10,
                            Size = 40,
                            inStock = true
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 1,
                            ProductQuantity = 10,
                            Size = 41,
                            inStock = true
                        },
                        new
                        {
                            Id = 7,
                            ProductId = 2,
                            ProductQuantity = 12,
                            Size = 36,
                            inStock = true
                        },
                        new
                        {
                            Id = 8,
                            ProductId = 2,
                            ProductQuantity = 10,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 9,
                            ProductId = 2,
                            ProductQuantity = 40,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 10,
                            ProductId = 2,
                            ProductQuantity = 30,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 11,
                            ProductId = 2,
                            ProductQuantity = 40,
                            Size = 40,
                            inStock = true
                        },
                        new
                        {
                            Id = 12,
                            ProductId = 2,
                            ProductQuantity = 20,
                            Size = 41,
                            inStock = true
                        },
                        new
                        {
                            Id = 13,
                            ProductId = 3,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 14,
                            ProductId = 3,
                            ProductQuantity = 1,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 15,
                            ProductId = 3,
                            ProductQuantity = 1,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 16,
                            ProductId = 3,
                            ProductQuantity = 1,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 17,
                            ProductId = 3,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 18,
                            ProductId = 3,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 19,
                            ProductId = 4,
                            ProductQuantity = 9,
                            Size = 36,
                            inStock = true
                        },
                        new
                        {
                            Id = 20,
                            ProductId = 4,
                            ProductQuantity = 8,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 21,
                            ProductId = 4,
                            ProductQuantity = 8,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 22,
                            ProductId = 4,
                            ProductQuantity = 0,
                            Size = 39,
                            inStock = false
                        },
                        new
                        {
                            Id = 23,
                            ProductId = 4,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 24,
                            ProductId = 4,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 25,
                            ProductId = 5,
                            ProductQuantity = 7,
                            Size = 36,
                            inStock = true
                        },
                        new
                        {
                            Id = 26,
                            ProductId = 5,
                            ProductQuantity = 0,
                            Size = 37,
                            inStock = false
                        },
                        new
                        {
                            Id = 27,
                            ProductId = 5,
                            ProductQuantity = 8,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 28,
                            ProductId = 5,
                            ProductQuantity = 9,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 29,
                            ProductId = 5,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 30,
                            ProductId = 5,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 31,
                            ProductId = 6,
                            ProductQuantity = 9,
                            Size = 36,
                            inStock = true
                        },
                        new
                        {
                            Id = 32,
                            ProductId = 6,
                            ProductQuantity = 8,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 33,
                            ProductId = 6,
                            ProductQuantity = 0,
                            Size = 38,
                            inStock = false
                        },
                        new
                        {
                            Id = 34,
                            ProductId = 6,
                            ProductQuantity = 0,
                            Size = 39,
                            inStock = false
                        },
                        new
                        {
                            Id = 35,
                            ProductId = 6,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 36,
                            ProductId = 6,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 37,
                            ProductId = 7,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 38,
                            ProductId = 7,
                            ProductQuantity = 8,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 39,
                            ProductId = 7,
                            ProductQuantity = 0,
                            Size = 38,
                            inStock = false
                        },
                        new
                        {
                            Id = 40,
                            ProductId = 7,
                            ProductQuantity = 9,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 41,
                            ProductId = 7,
                            ProductQuantity = 8,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 42,
                            ProductId = 7,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 43,
                            ProductId = 8,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 44,
                            ProductId = 8,
                            ProductQuantity = 4,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 45,
                            ProductId = 8,
                            ProductQuantity = 0,
                            Size = 38,
                            inStock = false
                        },
                        new
                        {
                            Id = 46,
                            ProductId = 8,
                            ProductQuantity = 8,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 47,
                            ProductId = 8,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 48,
                            ProductId = 8,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 49,
                            ProductId = 9,
                            ProductQuantity = 5,
                            Size = 36,
                            inStock = true
                        },
                        new
                        {
                            Id = 50,
                            ProductId = 9,
                            ProductQuantity = 0,
                            Size = 37,
                            inStock = false
                        },
                        new
                        {
                            Id = 51,
                            ProductId = 9,
                            ProductQuantity = 0,
                            Size = 38,
                            inStock = false
                        },
                        new
                        {
                            Id = 52,
                            ProductId = 9,
                            ProductQuantity = 0,
                            Size = 39,
                            inStock = false
                        },
                        new
                        {
                            Id = 53,
                            ProductId = 9,
                            ProductQuantity = 7,
                            Size = 40,
                            inStock = true
                        },
                        new
                        {
                            Id = 54,
                            ProductId = 9,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 55,
                            ProductId = 10,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 56,
                            ProductId = 10,
                            ProductQuantity = 0,
                            Size = 37,
                            inStock = false
                        },
                        new
                        {
                            Id = 57,
                            ProductId = 10,
                            ProductQuantity = 10,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 58,
                            ProductId = 10,
                            ProductQuantity = 10,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 59,
                            ProductId = 10,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 60,
                            ProductId = 10,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 61,
                            ProductId = 11,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 62,
                            ProductId = 11,
                            ProductQuantity = 10,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 63,
                            ProductId = 11,
                            ProductQuantity = 10,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 64,
                            ProductId = 11,
                            ProductQuantity = 10,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 65,
                            ProductId = 11,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 66,
                            ProductId = 11,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 67,
                            ProductId = 12,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 68,
                            ProductId = 12,
                            ProductQuantity = 10,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 69,
                            ProductId = 12,
                            ProductQuantity = 50,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 70,
                            ProductId = 12,
                            ProductQuantity = 10,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 71,
                            ProductId = 12,
                            ProductQuantity = 0,
                            Size = 40,
                            inStock = false
                        },
                        new
                        {
                            Id = 72,
                            ProductId = 12,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 73,
                            ProductId = 13,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 74,
                            ProductId = 13,
                            ProductQuantity = 0,
                            Size = 37,
                            inStock = false
                        },
                        new
                        {
                            Id = 75,
                            ProductId = 13,
                            ProductQuantity = 10,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 76,
                            ProductId = 13,
                            ProductQuantity = 0,
                            Size = 39,
                            inStock = false
                        },
                        new
                        {
                            Id = 77,
                            ProductId = 13,
                            ProductQuantity = 10,
                            Size = 40,
                            inStock = true
                        },
                        new
                        {
                            Id = 78,
                            ProductId = 13,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 79,
                            ProductId = 14,
                            ProductQuantity = 0,
                            Size = 36,
                            inStock = false
                        },
                        new
                        {
                            Id = 80,
                            ProductId = 14,
                            ProductQuantity = 15,
                            Size = 37,
                            inStock = true
                        },
                        new
                        {
                            Id = 81,
                            ProductId = 14,
                            ProductQuantity = 10,
                            Size = 38,
                            inStock = true
                        },
                        new
                        {
                            Id = 82,
                            ProductId = 14,
                            ProductQuantity = 10,
                            Size = 39,
                            inStock = true
                        },
                        new
                        {
                            Id = 83,
                            ProductId = 14,
                            ProductQuantity = 10,
                            Size = 40,
                            inStock = true
                        },
                        new
                        {
                            Id = 84,
                            ProductId = 14,
                            ProductQuantity = 0,
                            Size = 41,
                            inStock = false
                        },
                        new
                        {
                            Id = 85,
                            ProductId = 15,
                            ProductQuantity = 0,
                            Size = 39,
                            inStock = false
                        },
                        new
                        {
                            Id = 86,
                            ProductId = 15,
                            ProductQuantity = 15,
                            Size = 40,
                            inStock = true
                        },
                        new
                        {
                            Id = 87,
                            ProductId = 15,
                            ProductQuantity = 10,
                            Size = 41,
                            inStock = true
                        },
                        new
                        {
                            Id = 88,
                            ProductId = 15,
                            ProductQuantity = 10,
                            Size = 42,
                            inStock = true
                        },
                        new
                        {
                            Id = 89,
                            ProductId = 15,
                            ProductQuantity = 10,
                            Size = 43,
                            inStock = true
                        },
                        new
                        {
                            Id = 90,
                            ProductId = 15,
                            ProductQuantity = 0,
                            Size = 44,
                            inStock = false
                        },
                        new
                        {
                            Id = 91,
                            ProductId = 15,
                            ProductQuantity = 0,
                            Size = 45,
                            inStock = false
                        },
                        new
                        {
                            Id = 92,
                            ProductId = 15,
                            ProductQuantity = 0,
                            Size = 46,
                            inStock = false
                        });
                });

            modelBuilder.Entity("Core.Entities.Store.StoreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address_en")
                        .HasColumnType("text");

                    b.Property<string>("Address_es")
                        .HasColumnType("text");

                    b.Property<string>("Address_fr")
                        .HasColumnType("text");

                    b.Property<string>("Address_uk")
                        .HasColumnType("text");

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("MapLink")
                        .HasColumnType("text");

                    b.Property<string>("Name_en")
                        .HasColumnType("text");

                    b.Property<string>("Name_es")
                        .HasColumnType("text");

                    b.Property<string>("Name_fr")
                        .HasColumnType("text");

                    b.Property<string>("Name_uk")
                        .HasColumnType("text");

                    b.Property<string>("WorkingHours")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address_en = "Antonovycha, 176, Ground Floor",
                            Address_es = "Antonovycha, 176, Planta Baja",
                            Address_fr = "Antonovycha, 176, Rez-de-chaussée",
                            Address_uk = "вул. Антоновича, 176, перший поверх",
                            CityId = 1,
                            MapLink = "Link to map",
                            Name_en = "TRC Ocean Plaza",
                            Name_es = "TRC Ocean Plaza",
                            Name_fr = "TRC Ocean Plaza",
                            Name_uk = "ТРЦ Ocean Plaza",
                            WorkingHours = "10:00 - 22:00"
                        },
                        new
                        {
                            Id = 2,
                            Address_en = "Dniprovska Naberezhna, 12, Second Floor",
                            Address_es = "Dniprovska Naberezhna, 12, Segunda Planta",
                            Address_fr = "Dniprovska Naberezhna, 12, Deuxième étage",
                            Address_uk = "вул. Дніпровська набережна, 12, другий поверх",
                            CityId = 1,
                            MapLink = "Link to map",
                            Name_en = "TRC River Mall",
                            Name_es = "TRC River Mall",
                            Name_fr = "TRC River Mall",
                            Name_uk = "ТРЦ River Mall",
                            WorkingHours = "10:00 - 22:00"
                        },
                        new
                        {
                            Id = 3,
                            Address_en = "Prospekt Obolonsky, 1-B, First Floor",
                            Address_es = "Prospekt Obolonsky, 1-B, Primer Piso",
                            Address_fr = "Prospekt Obolonsky, 1-B, Premier étage",
                            Address_uk = "просп. Оболонський, 1-Б, перший поверх",
                            CityId = 1,
                            MapLink = "Link to map",
                            Name_en = "TRC DREAM Yellow",
                            Name_es = "TRC DREAM Yellow",
                            Name_fr = "TRC DREAM Yellow",
                            Name_uk = "ТРЦ DREAM Yellow",
                            WorkingHours = "10:00 - 22:00"
                        },
                        new
                        {
                            Id = 4,
                            Address_en = "Berkovetska, 6-D, First Floor",
                            Address_es = "Berkovetska, 6-D, Primer Piso",
                            Address_fr = "Berkovetska, 6-D, Premier étage",
                            Address_uk = "вул. Берковецька, 6-Д, перший поверх",
                            CityId = 1,
                            MapLink = "Link to map",
                            Name_en = "TRC Lavina Mall",
                            Name_es = "TRC Lavina Mall",
                            Name_fr = "TRC Lavina Mall",
                            Name_uk = "ТРЦ Lavina Mall",
                            WorkingHours = "10:00 - 22:00"
                        },
                        new
                        {
                            Id = 5,
                            Address_en = "Kiltseva Doroga, 1, First Floor",
                            Address_es = "Kiltseva Doroga, 1, Primer Piso",
                            Address_fr = "Kiltseva Doroga, 1, Premier étage",
                            Address_uk = "вул. Кільцева дорога, 1, перший поверх",
                            CityId = 1,
                            MapLink = "Link to map",
                            Name_en = "TRC Respublika Park",
                            Name_es = "TRC Respublika Park",
                            Name_fr = "TRC Respublika Park",
                            Name_uk = "ТРЦ Respublika Park",
                            WorkingHours = "10:00 - 22:00"
                        },
                        new
                        {
                            Id = 6,
                            Address_en = "Prospekt Pravdy, 47, First Floor",
                            Address_es = "Prospekt Pravdy, 47, Primer Piso",
                            Address_fr = "Prospekt Pravdy, 47, Premier étage",
                            Address_uk = "просп. Правди, 47, перший поверх",
                            CityId = 1,
                            MapLink = "Link to map",
                            Name_en = "TRC Retroville",
                            Name_es = "TRC Retroville",
                            Name_fr = "TRC Retroville",
                            Name_uk = "ТРЦ Retroville",
                            WorkingHours = "10:00 - 22:00"
                        },
                        new
                        {
                            Id = 7,
                            Address_en = "Prospekt Stepana Bandery, 36, First Floor",
                            Address_es = "Prospekt Stepana Bandery, 36, Primer Piso",
                            Address_fr = "Prospekt Stepana Bandery, 36, Premier étage",
                            Address_uk = "просп. Степана Бандери, 36, перший поверх",
                            CityId = 1,
                            MapLink = "Link to map",
                            Name_en = "TRC Blockbuster Mall",
                            Name_es = "TRC Blockbuster Mall",
                            Name_fr = "TRC Blockbuster Mall",
                            Name_uk = "ТРЦ Blockbuster Mall",
                            WorkingHours = "10:00 - 22:00"
                        },
                        new
                        {
                            Id = 8,
                            Address_en = "Gnata Khotkevycha, 1-B, First Floor",
                            Address_es = "Gnata Khotkevycha, 1-B, Primer Piso",
                            Address_fr = "Gnata Khotkevycha, 1-B, Premier étage",
                            Address_uk = "вул. Гната Хоткевича, 1-Б, перший поверх",
                            CityId = 1,
                            MapLink = "Link to map",
                            Name_en = "TRK Prospekt",
                            Name_es = "TRK Prospekt",
                            Name_fr = "TRK Prospekt",
                            Name_uk = "ТРК Проспект",
                            WorkingHours = "10:00 - 22:00"
                        },
                        new
                        {
                            Id = 9,
                            Address_en = "600-Richchia, 17, New Building, First Floor",
                            Address_es = "600-Richchia, 17, Nuevo Edificio, Primer Piso",
                            Address_fr = "600-Richchia, 17, Nouveau Bâtiment, Premier étage",
                            Address_uk = "вул. 600-річчя, 17, нова будівля, перший поверх",
                            CityId = 2,
                            MapLink = "Link to map",
                            Name_en = "TRC Megamall",
                            Name_es = "TRC Megamall",
                            Name_fr = "TRC Megamall",
                            Name_uk = "ТРЦ Megamall",
                            WorkingHours = "10:00 - 21:00"
                        },
                        new
                        {
                            Id = 10,
                            Address_en = "Mykoly Ovodova, 51, First Floor",
                            Address_es = "Mykoly Ovodova, 51, Primer Piso",
                            Address_fr = "Mykoly Ovodova, 51, Premier étage",
                            Address_uk = "вул. Миколи Оводова, 51, перший поверх",
                            CityId = 2,
                            MapLink = "Link to map",
                            Name_en = "TRC Sky Park",
                            Name_es = "TRC Sky Park",
                            Name_fr = "TRC Sky Park",
                            Name_uk = "ТРЦ Sky Park",
                            WorkingHours = "10:00 - 21:00"
                        },
                        new
                        {
                            Id = 11,
                            Address_en = "Queen Elizabeth II (Hlinka), 2, Ground Floor",
                            Address_es = "Queen Elizabeth II (Hlinka), 2, Planta Baja",
                            Address_fr = "Queen Elizabeth II (Hlinka), 2, Rez-de-chaussée",
                            Address_uk = "вул. Глінки (колиш. Єлизавети II), 2, перший поверх",
                            CityId = 3,
                            MapLink = "Link to map",
                            Name_en = "TRC MOST City",
                            Name_es = "TRC MOST City",
                            Name_fr = "TRC MOST City",
                            Name_uk = "ТРЦ MOST City",
                            WorkingHours = "10:00 - 21:00"
                        },
                        new
                        {
                            Id = 12,
                            Address_en = "Nyzhnedniprovskaya, 17, First Floor",
                            Address_es = "Nyzhnedniprovskaya, 17, Primer Piso",
                            Address_fr = "Nyzhnedniprovskaya, 17, Premier étage",
                            Address_uk = "вул. Нижньодніпровська, 17, перший поверх",
                            CityId = 3,
                            MapLink = "Link to map",
                            Name_en = "TRC Karavan",
                            Name_es = "TRC Karavan",
                            Name_fr = "TRC Karavan",
                            Name_uk = "ТРЦ Karavan",
                            WorkingHours = "10:00 - 21:00"
                        },
                        new
                        {
                            Id = 13,
                            Address_en = "Kyivska, 77, First Floor",
                            Address_es = "Kyivska, 77, Primer Piso",
                            Address_fr = "Kyivska, 77, Premier étage",
                            Address_uk = "вул. Київська, 77, перший поверх",
                            CityId = 4,
                            MapLink = "Link to map",
                            Name_en = "TRC Global",
                            Name_es = "TRC Global",
                            Name_fr = "TRC Global",
                            Name_uk = "ТРЦ Global",
                            WorkingHours = "10:00 - 21:00"
                        },
                        new
                        {
                            Id = 14,
                            Address_en = "Ivana Mykolaychuka, 2",
                            Address_es = "Ivana Mykolaychuka, 2",
                            Address_fr = "Ivana Mykolaychuka, 2",
                            Address_uk = "вул. Івана Миколайчука, 2",
                            CityId = 5,
                            MapLink = "Link to map",
                            Name_en = "Shopping Mall ARSEN",
                            Name_es = "Centro Comercial ARSEN",
                            Name_fr = "Centre Commercial ARSEN",
                            Name_uk = "ТЦ Арсен",
                            WorkingHours = "10:00 - 21:00"
                        },
                        new
                        {
                            Id = 15,
                            Address_en = "4 Varshavska Street",
                            Address_es = "Calle Varsovia, 4",
                            Address_fr = "Rue Varsovie, 4",
                            Address_uk = "вул. Варшавська, 4",
                            CityId = 6,
                            MapLink = "Link to map",
                            Name_en = "Juvent Shopping Center (Boutique 110)",
                            Name_es = "Juvent Centre Commercial (Boutique 110)",
                            Name_fr = "Juvent Centre Commercial (Boutique 110)",
                            Name_uk = "ТЦ Ювент (бутик 110)",
                            WorkingHours = "10:00 - 18:00"
                        },
                        new
                        {
                            Id = 16,
                            Address_en = "1 Sukhomlynskoho Street, Second Floor",
                            Address_es = "Calle Sukhomlynskoho, 1, Segunda Planta",
                            Address_fr = "Rue Sukhomlynskoho, 1, Deuxième étage",
                            Address_uk = "вул. Сухомлинського, 1, другий поверх",
                            CityId = 7,
                            MapLink = "Link to map",
                            Name_en = "PortCity Shopping Mall",
                            Name_es = "PortCity Centro Comercial",
                            Name_fr = "PortCity Centre Commercial",
                            Name_uk = "ТЦ PortCity",
                            WorkingHours = "10:00 - 22:00"
                        },
                        new
                        {
                            Id = 17,
                            Address_en = "1 Voli Avenue, Fourth Floor",
                            Address_es = "Avenida Voli, 1, Cuarto Piso",
                            Address_fr = "Avenue Voli, 1, Quatrième étage",
                            Address_uk = "просп. Волі, 1, четвертий поверх",
                            CityId = 7,
                            MapLink = "Link to map",
                            Name_en = "TSUM Lutsk",
                            Name_es = "TSUM Lutsk",
                            Name_fr = "TSUM Lutsk",
                            Name_uk = "ЦУМ Луцьк",
                            WorkingHours = "09:30 - 21:00"
                        },
                        new
                        {
                            Id = 18,
                            Address_en = "9 Voli Avenue, Building Facade",
                            Address_es = "Avenida Voli, 9, Fachada del Edificio",
                            Address_fr = "Avenue Voli, 9, Façade du Bâtiment",
                            Address_uk = "просп. Волі, 9, фасад будівлі",
                            CityId = 7,
                            MapLink = "Link to map",
                            Name_en = "ESTRO Store (Voli, 9)",
                            Name_es = "ESTRO Store (Voli, 9)",
                            Name_fr = "ESTRO Store (Voli, 9)",
                            Name_uk = "Магазин ЕСТРО (Волі, 9)",
                            WorkingHours = "09:00 - 21:00"
                        },
                        new
                        {
                            Id = 19,
                            Address_en = "1 Karpenka-Karyho Street",
                            Address_es = "Calle Karpenka-Karyho, 1",
                            Address_fr = "Rue Karpenka-Karyho, 1",
                            Address_uk = "вул. Карпенка-Карого, 1",
                            CityId = 7,
                            MapLink = "Link to map",
                            Name_en = "Juvent Shopping Center (Boutique 125)",
                            Name_es = "Juvent Shopping Center (Boutique 125)",
                            Name_fr = "Juvent Shopping Center (Boutique 125)",
                            Name_uk = "ТЦ Ювент (бутик 125)",
                            WorkingHours = "09:00 - 21:00"
                        },
                        new
                        {
                            Id = 20,
                            Address_en = "7b Pid Dubom Street, Second Floor",
                            Address_es = "Calle Pid Dubom, 7b, Segunda Planta",
                            Address_fr = "Rue Pid Dubom, 7b, Deuxième étage",
                            Address_uk = "вул. Під Дубом, 7б, другий поверх",
                            CityId = 8,
                            MapLink = "Link to map",
                            Name_en = "Forum Lviv Shopping Mall",
                            Name_es = "Forum Lviv Centro Comercial",
                            Name_fr = "Forum Lviv Centre Commercial",
                            Name_uk = "ТЦ Форум Львів",
                            WorkingHours = "10:00 - 21:00"
                        },
                        new
                        {
                            Id = 21,
                            Address_en = "226-A Kulparkivska Street, First Floor",
                            Address_es = "Calle Kulparkivska, 226-A, Primer Piso",
                            Address_fr = "Rue Kulparkivska, 226-A, Premier étage",
                            Address_uk = "вул. Кульпарківська, 226-А, перший поверх",
                            CityId = 8,
                            MapLink = "Link to map",
                            Name_en = "Victoria Gardens Shopping Mall",
                            Name_es = "Victoria Gardens Centro Comercial",
                            Name_fr = "Victoria Gardens Centre Commercial",
                            Name_uk = "ТЦ Вікторія Гарденс",
                            WorkingHours = "10:00 - 20:00"
                        },
                        new
                        {
                            Id = 22,
                            Address_en = "30 Stryiska Street, First Floor",
                            Address_es = "Calle Stryiska, 30, Primer Piso",
                            Address_fr = "Rue Stryiska, 30, Premier étage",
                            Address_uk = "вул. Стрийська, 30, перший поверх",
                            CityId = 8,
                            MapLink = "Link to map",
                            Name_en = "King Cross Leopolis Shopping Mall",
                            Name_es = "King Cross Leopolis Centro Comercial",
                            Name_fr = "King Cross Leopolis Centre Commercial",
                            Name_uk = "ТЦ King Cross Leopolis",
                            WorkingHours = "10:00 - 21:00"
                        },
                        new
                        {
                            Id = 23,
                            Address_en = "14 Doroshenka Street",
                            Address_es = "Calle Doroshenka, 14",
                            Address_fr = "Rue Doroshenka, 14",
                            Address_uk = "вул. Дорошенка, 14",
                            CityId = 8,
                            MapLink = "Link to map",
                            Name_en = "ESTRO Store (Doroshenka, 14)",
                            Name_es = "ESTRO Store (Doroshenka, 14)",
                            Name_fr = "ESTRO Store (Doroshenka, 14)",
                            Name_uk = "Магазин ЕСТРО (Дорошенка, 14)",
                            WorkingHours = "10:00 - 20:00"
                        },
                        new
                        {
                            Id = 24,
                            Address_en = "2 Prospekt Nezalezhnosti, First Floor",
                            Address_es = "Avenida Prospekt Nezalezhnosti, 2, Primer Piso",
                            Address_fr = "Avenue Prospekt Nezalezhnosti, 2, Premier étage",
                            Address_uk = "просп. Незалежності, 2, перший поверх",
                            CityId = 9,
                            MapLink = "Link to map",
                            Name_en = "City Center Shopping Mall",
                            Name_es = "City Center Centro Comercial",
                            Name_fr = "City Center Centre Commercial",
                            Name_uk = "ТЦ City Center",
                            WorkingHours = "10:00 - 21:00"
                        },
                        new
                        {
                            Id = 25,
                            Address_en = "23 Kulyka i Hudacheka",
                            Address_es = "Calle Kulyka i Hudacheka, 23",
                            Address_fr = "Rue Kulyka i Hudacheka, 23",
                            Address_uk = "вул. Кулика і Гудачека, 23",
                            CityId = 10,
                            MapLink = "Link to map",
                            Name_en = "Equator Shopping Mall",
                            Name_es = "Equator Centro Comercial",
                            Name_fr = "Equator Centre Commercial",
                            Name_uk = "ТЦ Екватор",
                            WorkingHours = "10:00 - 22:00"
                        },
                        new
                        {
                            Id = 26,
                            Address_en = "1 Oleksandra Borysenka, First Floor",
                            Address_es = "Calle Oleksandra Borysenka, 1, Primer Piso",
                            Address_fr = "Rue Oleksandra Borysenka, 1, Premier étage",
                            Address_uk = "вул. Олександра Борисенка, 1, перший поверх",
                            CityId = 10,
                            MapLink = "Link to map",
                            Name_en = "Zlata Plaza Shopping Mall",
                            Name_es = "Zlata Plaza Centro Comercial",
                            Name_fr = "Zlata Plaza Centre Commercial",
                            Name_uk = "ТЦ Злата Плаза",
                            WorkingHours = "10:00 - 21:00"
                        },
                        new
                        {
                            Id = 27,
                            Address_en = "9 Heroiv Pratsi, First Floor",
                            Address_es = "Calle Heroiv Pratsi, 9, Primer Piso",
                            Address_fr = "Rue Heroiv Pratsi, 9, Premier étage",
                            Address_uk = "вул. Героїв Праці, 9, перший поверх",
                            CityId = 11,
                            MapLink = "Link to map",
                            Name_en = "Dafi Shopping Mall",
                            Name_es = "Dafi Centro Comercial",
                            Name_fr = "Dafi Centre Commercial",
                            Name_uk = "ТЦ Дафі",
                            WorkingHours = "10:00 - 20:00"
                        },
                        new
                        {
                            Id = 28,
                            Address_en = "2a Pushkinska, Third Floor",
                            Address_es = "Calle Pushkinska, 2a, Tercer Piso",
                            Address_fr = "Rue Pushkinska, 2a, Troisième étage",
                            Address_uk = "вул. Пушкінська, 2а, третій поверх",
                            CityId = 11,
                            MapLink = "Link to map",
                            Name_en = "Nikolsky Shopping Mall",
                            Name_es = "Nikolsky Centro Comercial",
                            Name_fr = "Nikolsky Centre Commercial",
                            Name_uk = "ТЦ Нікольський",
                            WorkingHours = "10:00 - 21:00"
                        },
                        new
                        {
                            Id = 29,
                            Address_en = "265A Haharina, First Floor",
                            Address_es = "Calle Haharina, 265A, Primer Piso",
                            Address_fr = "Rue Haharina, 265A, Premier étage",
                            Address_uk = "вул. Гагаріна, 265А, перший поверх",
                            CityId = 12,
                            MapLink = "Link to map",
                            Name_en = "DEPO't Center Shopping Mall",
                            Name_es = "DEPO't Center Centro Comercial",
                            Name_fr = "DEPO't Center Centre Commercial",
                            Name_uk = "ТЦ Депо",
                            WorkingHours = "10:00 - 20:00"
                        });
                });

            modelBuilder.Entity("Core.Entities.UserInfo.Bag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Bag");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.BagItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BagId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BagId");

                    b.HasIndex("ProductId");

                    b.ToTable("BagItems");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("numeric");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("EmailUser")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OrderPaymentId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("OrderTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("numeric");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OrderPaymentId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.OrderItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("Step")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.OrderPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CardHolderName")
                        .HasColumnType("text");

                    b.Property<string>("CardMonthExpires")
                        .HasColumnType("text");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("CardYearExpires")
                        .HasColumnType("text");

                    b.Property<string>("Payment")
                        .HasColumnType("text");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrderPayment");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.UserBonuses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("BonusesAccrued")
                        .HasColumnType("numeric");

                    b.Property<string>("BonusesDescription")
                        .HasColumnType("text");

                    b.Property<string>("BonusesOperation")
                        .HasColumnType("text");

                    b.Property<int?>("Name")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserBonuses");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.UserFavoriteProduct", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("UserFavoriteProduct");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Core.Entities.UserEntity.User", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("AuthType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("BagId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("BonusBalance")
                        .HasColumnType("numeric");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("Core.Entities.Address.CityEntity", b =>
                {
                    b.HasOne("Core.Entities.Address.CountryEntity", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Core.Entities.Category.CategoryEntity", b =>
                {
                    b.HasOne("Core.Entities.Category.SubCategory", "SubCategory")
                        .WithMany("Categories")
                        .HasForeignKey("SubCategoryId");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Core.Entities.Category.SubCategory", b =>
                {
                    b.HasOne("Core.Entities.Category.MainCategory", "MainCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("MainCategoryId");

                    b.Navigation("MainCategory");
                });

            modelBuilder.Entity("Core.Entities.Product.ImageEntity", b =>
                {
                    b.HasOne("Core.Entities.Product.ProductEntity", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Entities.Product.Options", b =>
                {
                    b.HasOne("Core.Entities.Product.Info", "Info")
                        .WithMany("Options")
                        .HasForeignKey("InfoId");

                    b.Navigation("Info");
                });

            modelBuilder.Entity("Core.Entities.Product.ProductEntity", b =>
                {
                    b.HasOne("Core.Entities.Category.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Core.Entities.Product.StorageEntity", b =>
                {
                    b.HasOne("Core.Entities.Product.ProductEntity", "Product")
                        .WithMany("Storages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Entities.Store.StoreEntity", b =>
                {
                    b.HasOne("Core.Entities.Address.CityEntity", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.Bag", b =>
                {
                    b.HasOne("Core.Entities.UserEntity.User", "User")
                        .WithOne("Bag")
                        .HasForeignKey("Core.Entities.UserInfo.Bag", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.BagItems", b =>
                {
                    b.HasOne("Core.Entities.UserInfo.Bag", "Bag")
                        .WithMany("BagItems")
                        .HasForeignKey("BagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Product.ProductEntity", "Product")
                        .WithMany("BagItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bag");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.Order", b =>
                {
                    b.HasOne("Core.Entities.Address.AddressEntity", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Core.Entities.UserInfo.OrderPayment", "OrderPayment")
                        .WithMany()
                        .HasForeignKey("OrderPaymentId");

                    b.HasOne("Core.Entities.UserEntity.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");

                    b.Navigation("Address");

                    b.Navigation("OrderPayment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.OrderItems", b =>
                {
                    b.HasOne("Core.Entities.UserInfo.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("Core.Entities.Product.ProductEntity", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.UserBonuses", b =>
                {
                    b.HasOne("Core.Entities.UserEntity.User", "User")
                        .WithMany("UserBonuses")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.UserFavoriteProduct", b =>
                {
                    b.HasOne("Core.Entities.Product.ProductEntity", "Product")
                        .WithMany("FavoriteProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.UserEntity.User", "User")
                        .WithMany("FavoriteProducts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Category.CategoryEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Core.Entities.Category.MainCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Core.Entities.Category.SubCategory", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Core.Entities.Product.Info", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("Core.Entities.Product.ProductEntity", b =>
                {
                    b.Navigation("BagItems");

                    b.Navigation("FavoriteProducts");

                    b.Navigation("Images");

                    b.Navigation("OrderItems");

                    b.Navigation("Storages");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.Bag", b =>
                {
                    b.Navigation("BagItems");
                });

            modelBuilder.Entity("Core.Entities.UserInfo.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Core.Entities.UserEntity.User", b =>
                {
                    b.Navigation("Bag");

                    b.Navigation("FavoriteProducts");

                    b.Navigation("Orders");

                    b.Navigation("UserBonuses");
                });
#pragma warning restore 612, 618
        }
    }
}
